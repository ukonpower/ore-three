var m=Object.defineProperty;var f=(s,r,e)=>r in s?m(s,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[r]=e;var t=(s,r,e)=>(f(s,typeof r!="symbol"?r+"":r,e),e);import{B as d,W as o,L as n,U as a,M as h,a as l,b as g,C as v}from"./Uniforms.1c993ea0.js";import{P as c}from"./index.38a0fe2c.js";const u=`#define GLSLIFY 1
varying vec2 vUv;uniform sampler2D sceneTex;uniform float time;float random(vec2 st){return fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);}void main(void){vec3 c=texture2D(sceneTex,vUv).xyz;c+=random(vUv+sin(time)*0.1)*0.3;gl_FragColor=vec4(c,1.0);}`,p=`#define GLSLIFY 1
varying vec2 vUv;uniform sampler2D backbuffer;uniform float time;void main(void){vec2 uv=vUv*2.0-1.0;vec3 c=texture2D(backbuffer,vUv).xyz;float d=length(vec2(uv))*4.0;c.x+=sin(d-time*2.0+0.0)*0.4;c.y+=sin(d-time*2.0+0.4)*0.4;c.z+=sin(d-time*2.0+0.8)*0.4;gl_FragColor=vec4(c,1.0);}`;class x extends d{constructor(){super();t(this,"renderTargets");t(this,"pass1");t(this,"pass2");t(this,"box");this.renderTargets={rt1:new o(0,0,{stencilBuffer:!1,generateMipmaps:!1,depthBuffer:!0,minFilter:n,magFilter:n}),rt2:new o(0,0,{stencilBuffer:!1,generateMipmaps:!1,depthBuffer:!1,minFilter:n,magFilter:n})}}onBind(e){super.onBind(e),this.commonUniforms=a.mergeUniforms(this.commonUniforms,{}),this.initScene(),this.initPostProcessing()}initPostProcessing(){this.renderer!=null&&(this.pass1=new c(this.renderer,{fragmentShader:u,uniforms:a.mergeUniforms(this.commonUniforms,{})}),this.pass2=new c(this.renderer,{fragmentShader:p,uniforms:a.mergeUniforms(this.commonUniforms,{})}))}initScene(){this.camera.position.set(0,1.5,4),this.camera.lookAt(0,0,0),this.box=new h(new l,new g),this.scene.add(this.box)}animate(e){this.renderer!=null&&(this.box&&this.box.rotateY(e),this.renderer.setRenderTarget(this.renderTargets.rt1),this.renderer.render(this.scene,this.camera),this.pass1&&this.pass2&&(this.pass1.render({sceneTex:this.renderTargets.rt1.texture},this.renderTargets.rt2),this.pass2.render({backbuffer:this.renderTargets.rt2.texture},null)))}onResize(){super.onResize(),this.resizeRenderTargets()}resizeRenderTargets(){const e=Object.keys(this.renderTargets);for(let i=0;i<e.length;i++)this.renderTargets[e[i]].setSize(this.info.size.canvasPixelSize.x,this.info.size.canvasPixelSize.y)}}class b{constructor(){t(this,"controller");t(this,"scene");this.controller=new v,this.scene=new x,this.controller.addLayer(this.scene,{name:"Main",canvas:document.querySelector("#canvas")})}}window.addEventListener("load",()=>{new b});
