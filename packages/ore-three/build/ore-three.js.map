{"version":3,"file":"ore-three.js","sources":["../src/core/BaseLayer.ts","../src/utils/Pointer.ts","../src/core/Controller.ts","../src/utils/Bezier.ts","../src/utils/Easings.ts","../src/utils/Lerps.ts","../src/utils/Animator.ts","../src/utils/Animation/AnimationAction.ts","../src/utils/Animation/FCurve.ts","../src/utils/Animation/FCurveGroup.ts","../src/utils/Animation/FCurveKeyFrame.ts","../src/utils/BlenderConnector/index.ts","../src/utils/Uniforms.ts","../src/utils/GPUComputationController/index.ts","../src/utils/PostProcessing/index.ts","../src/utils/LayoutController.ts","../src/utils/WaitMan.ts"],"sourcesContent":["import * as THREE from 'three';\n\nimport { Uniforms } from '../utils/Uniforms';\nimport { PointerEventArgs } from './Controller';\n\nexport declare interface LayerParam extends THREE.WebGLRendererParameters {\n\tname: string;\n\tcanvas?: HTMLCanvasElement;\n\taspectSetting?: AspectSetting;\n\twrapperElement?: HTMLElement | null;\n\twrapperElementRect?: DOMRect | null;\n\tpixelRatio?: number\n}\n\nexport declare interface LayerInfo extends LayerParam {\n\tsize: LayerSize;\n\taspectSetting: AspectSetting;\n\tcanvas: HTMLCanvasElement;\n}\n\nexport declare interface LayerSize {\n\tcanvasAspectRatio: number;\n\twindowSize: THREE.Vector2;\n\twindowAspectRatio: number;\n\tcanvasSize: THREE.Vector2;\n\tcanvasPixelSize: THREE.Vector2;\n\tpixelRatio: number\n\tportraitWeight: number;\n\twideWeight: number;\n}\n\nexport declare interface AspectSetting {\n\tmainAspect: number;\n\tportraitAspect: number;\n\twideAspect: number;\n}\n\nexport declare interface TouchEventArgs {\n\tevent: PointerEvent | TouchEvent;\n\tposition: THREE.Vector2;\n\tdelta: THREE.Vector2;\n\tscreenPosition: THREE.Vector2;\n\twindowPosition: THREE.Vector2;\n}\n\nexport class BaseLayer extends THREE.EventDispatcher {\n\n\tpublic info: LayerInfo;\n\n\tpublic renderer: THREE.WebGLRenderer;\n\tpublic scene: THREE.Scene;\n\tpublic camera: THREE.PerspectiveCamera;\n\n\tpublic time = 0;\n\tpublic commonUniforms: Uniforms;\n\tprotected readyAnimate = false;\n\n\tconstructor( param: LayerParam ) {\n\n\t\tsuper();\n\n\t\tthis.renderer = new THREE.WebGLRenderer( param );\n\t\tthis.renderer.setPixelRatio( param.pixelRatio || window.devicePixelRatio );\n\t\tthis.renderer.debug.checkShaderErrors = true;\n\n\t\tthis.info = {\n\t\t\tcanvas: this.renderer.domElement,\n\t\t\taspectSetting: {\n\t\t\t\tmainAspect: 16 / 9,\n\t\t\t\twideAspect: 10 / 1,\n\t\t\t\tportraitAspect: 1 / 2,\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\twindowSize: new THREE.Vector2(),\n\t\t\t\twindowAspectRatio: 1.0,\n\t\t\t\tcanvasSize: new THREE.Vector2(),\n\t\t\t\tcanvasPixelSize: new THREE.Vector2(),\n\t\t\t\tcanvasAspectRatio: 1.0,\n\t\t\t\tpixelRatio: this.renderer.getPixelRatio(),\n\t\t\t\tportraitWeight: 0.0,\n\t\t\t\twideWeight: 0.0\n\t\t\t},\n\t\t\t...param\n\t\t};\n\n\t\tif ( param.wrapperElement ) {\n\n\t\t\tthis.setWrapperElement( param.wrapperElement || null, false );\n\n\t\t}\n\n\t\tthis.commonUniforms = {\n\t\t\ttime: {\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t};\n\n\t\tthis.scene = new THREE.Scene();\n\t\tthis.camera = new THREE.PerspectiveCamera( 50, 1, 0.1, 1000 );\n\n\t}\n\n\tpublic tick( deltaTime: number ) {\n\n\t\tthis.time += deltaTime;\n\n\t\tthis.commonUniforms.time.value = this.time;\n\n\t\tif ( this.readyAnimate ) {\n\n\t\t\tthis.animate( deltaTime );\n\n\t\t}\n\n\t}\n\n\tpublic animate( deltaTime: number ) { }\n\n\tpublic onBind() {\n\n\t\tsetTimeout( () => {\n\n\t\t\tthis.onResize();\n\t\t\tthis.readyAnimate = true;\n\n\t\t}, 0 );\n\n\t}\n\n\tpublic onUnbind() {\n\n\t\tthis.dispatchEvent( {\n\t\t\ttype: 'dispose'\n\t\t} );\n\n\t\tthis.removeChildrens( this.scene );\n\n\t\tthis.readyAnimate = false;\n\n\t}\n\n\tprotected removeChildrens( object: THREE.Object3D ) {\n\n\t\tconst length = object.children.length;\n\n\t\tfor ( let i = length - 1; i >= 0; i -- ) {\n\n\t\t\tthis.removeChildrens( object.children[ i ] );\n\n\t\t\tlet geo: THREE.BufferGeometry | undefined = undefined;\n\t\t\tlet mat: THREE.Material | undefined = undefined;\n\n\t\t\tif ( ( object.children[ i ] as THREE.Mesh ).isMesh ) {\n\n\t\t\t\tgeo = ( object.children[ i ] as THREE.Mesh ).geometry;\n\t\t\t\tmat = ( ( object.children[ i ] as THREE.Mesh ).material as THREE.Material );\n\n\t\t\t}\n\n\t\t\tobject.remove( ( object.children[ i ] ) );\n\n\t\t\tif ( geo ) {\n\n\t\t\t\tgeo.dispose();\n\n\t\t\t}\n\n\t\t\tif ( mat ) {\n\n\t\t\t\tmat.dispose();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tpublic setWrapperElement( wrapperElm: HTMLElement | null, dispatchResize: boolean = true ) {\n\n\t\tthis.info.wrapperElement = wrapperElm;\n\t\tthis.info.wrapperElementRect = wrapperElm ? wrapperElm.getBoundingClientRect() : null;\n\n\t\tif ( dispatchResize ) {\n\n\t\t\tthis.onResize();\n\n\t\t}\n\n\t}\n\n\tpublic onResize() {\n\n\t\tif ( this.renderer == null ) return;\n\n\t\tconst newWindowSize = new THREE.Vector2( document.body.clientWidth, window.innerHeight );\n\t\tconst newCanvasSize = new THREE.Vector2();\n\n\t\tif ( this.info.wrapperElement ) {\n\n\t\t\tnewCanvasSize.set( this.info.wrapperElement.clientWidth, this.info.wrapperElement.clientHeight );\n\n\t\t} else {\n\n\t\t\tnewCanvasSize.copy( newWindowSize );\n\n\t\t}\n\n\t\tlet portraitWeight = 1.0 - ( ( newCanvasSize.x / newCanvasSize.y ) - this.info.aspectSetting.portraitAspect ) / ( this.info.aspectSetting.mainAspect - this.info.aspectSetting.portraitAspect );\n\t\tportraitWeight = Math.min( 1.0, Math.max( 0.0, portraitWeight ) );\n\n\t\tlet wideWeight = 1.0 - ( ( newCanvasSize.x / newCanvasSize.y ) - this.info.aspectSetting.wideAspect ) / ( this.info.aspectSetting.mainAspect - this.info.aspectSetting.wideAspect );\n\t\twideWeight = Math.min( 1.0, Math.max( 0.0, wideWeight ) );\n\n\t\tthis.info.size.windowSize.copy( newWindowSize );\n\t\tthis.info.size.windowAspectRatio = newWindowSize.x / newWindowSize.y;\n\t\tthis.info.size.canvasSize.copy( newCanvasSize );\n\t\tthis.info.size.canvasPixelSize.copy( newCanvasSize.clone().multiplyScalar( this.renderer.getPixelRatio() ) );\n\t\tthis.info.size.canvasAspectRatio = newCanvasSize.x / newCanvasSize.y;\n\t\tthis.info.size.portraitWeight = portraitWeight;\n\t\tthis.info.size.wideWeight = wideWeight;\n\n\t\tthis.renderer.setPixelRatio( this.info.size.pixelRatio );\n\t\tthis.renderer.setSize( this.info.size.canvasSize.x, this.info.size.canvasSize.y );\n\t\tthis.camera.aspect = this.info.size.canvasAspectRatio;\n\t\tthis.camera.updateProjectionMatrix();\n\n\t\tif ( this.info.wrapperElement ) {\n\n\t\t\tthis.info.wrapperElementRect = this.info.wrapperElement.getBoundingClientRect();\n\n\t\t}\n\n\t}\n\n\tpublic pointerEvent( e: PointerEventArgs ) {\n\n\t\tconst canvasPointerPos = new THREE.Vector2();\n\t\tcanvasPointerPos.copy( e.position );\n\n\t\tif ( this.info.canvas ) {\n\n\t\t\tconst canvasRect = this.info.canvas.getBoundingClientRect();\n\t\t\tcanvasPointerPos.sub( new THREE.Vector2( canvasRect.x, canvasRect.y ) );\n\n\t\t}\n\n\t\tconst screenPosition = canvasPointerPos.clone();\n\t\tscreenPosition.divide( this.info.size.canvasSize );\n\t\tscreenPosition.y = 1.0 - screenPosition.y;\n\t\tscreenPosition.multiplyScalar( 2.0 ).subScalar( 1.0 );\n\n\n\t\tconst args: TouchEventArgs = {\n\t\t\tevent: e.pointerEvent,\n\t\t\tposition: canvasPointerPos.clone(),\n\t\t\tdelta: e.delta.clone(),\n\t\t\tscreenPosition: screenPosition.clone(),\n\t\t\twindowPosition: e.position.clone()\n\t\t};\n\n\t\tif ( e.pointerEventType == 'hover' ) {\n\n\t\t\tthis.onHover( args );\n\n\t\t} else if ( e.pointerEventType == 'start' ) {\n\n\t\t\tthis.onTouchStart( args );\n\n\t\t} else if ( e.pointerEventType == 'move' ) {\n\n\t\t\tthis.onTouchMove( args );\n\n\t\t} else if ( e.pointerEventType == 'end' ) {\n\n\t\t\tthis.onTouchEnd( args );\n\n\t\t}\n\n\t}\n\n\tpublic onTouchStart( args: TouchEventArgs ) { }\n\n\tpublic onTouchMove( args: TouchEventArgs ) { }\n\n\tpublic onTouchEnd( args: TouchEventArgs ) { }\n\n\tpublic onHover( args: TouchEventArgs ) { }\n\n\tpublic onWheel( event: WheelEvent, trackpadDelta: number ) { }\n\n}\n","import * as THREE from \"three\";\n\nexport class Pointer extends THREE.EventDispatcher {\n\n\tprotected isSP: boolean;\n\tprotected isTouching: boolean;\n\n\tpublic element: HTMLElement | null = null;\n\n\tpublic position: THREE.Vector2;\n\tpublic delta: THREE.Vector2;\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.position = new THREE.Vector2( NaN, NaN );\n\t\tthis.delta = new THREE.Vector2( NaN, NaN );\n\n\t\tconst userAgent = navigator.userAgent;\n\t\tthis.isSP = userAgent.indexOf( 'iPhone' ) >= 0 || userAgent.indexOf( 'iPad' ) >= 0 || userAgent.indexOf( 'Android' ) >= 0 || navigator.platform == \"iPad\" || ( navigator.platform == \"MacIntel\" && navigator.userAgent.indexOf( \"Safari\" ) != - 1 && navigator.userAgent.indexOf( \"Chrome\" ) == - 1 && ( navigator as any ).standalone !== undefined );\n\n\t\tthis.position.set( NaN, NaN );\n\t\tthis.isTouching = false;\n\n\t}\n\n\tpublic registerElement( elm: HTMLElement ) {\n\n\t\tthis.element = elm;\n\n\t\tconst onTouchStart = this.onTouch.bind( this, \"start\" );\n\t\tconst onTouchMove = this.onTouch.bind( this, \"move\" );\n\t\tconst onToucEnd = this.onTouch.bind( this, \"end\" );\n\t\tconst onPointerDown = this.onPointer.bind( this, \"start\" );\n\t\tconst onPointerMove = this.onPointer.bind( this, \"move\" );\n\t\tconst onPointerUp = this.onPointer.bind( this, \"end\" );\n\t\tconst onWheel = this.wheel.bind( this );\n\n\t\telm.addEventListener( 'touchstart', onTouchStart, { passive: false } );\n\t\telm.addEventListener( 'touchmove', onTouchMove, { passive: false } );\n\t\telm.addEventListener( 'touchend', onToucEnd, { passive: false } );\n\t\telm.addEventListener( 'pointerdown', onPointerDown );\n\t\telm.addEventListener( 'pointermove', onPointerMove );\n\t\telm.addEventListener( 'pointerup', onPointerUp );\n\t\telm.addEventListener( \"dragend\", onPointerUp );\n\t\telm.addEventListener( \"wheel\", onWheel, { passive: false } );\n\n\t\tconst onUnRegister = ( e: any ) => {\n\n\t\t\tif ( elm.isEqualNode( e.elm ) ) {\n\n\t\t\t\telm.removeEventListener( 'touchstart', onTouchStart );\n\t\t\t\telm.removeEventListener( 'touchmove', onTouchMove );\n\t\t\t\telm.removeEventListener( 'touchend', onToucEnd );\n\t\t\t\telm.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\t\telm.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\telm.removeEventListener( 'pointerup', onPointerUp );\n\t\t\t\telm.removeEventListener( \"dragend\", onPointerUp );\n\t\t\t\telm.removeEventListener( \"wheel\", onWheel );\n\n\t\t\t\tthis.removeEventListener( 'unregister', onUnRegister );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.addEventListener( 'unregister', onUnRegister );\n\n\t}\n\n\tpublic unregisterElement( elm: HTMLElement ) {\n\n\t\tthis.dispatchEvent( {\n\t\t\ttype: 'unregister',\n\t\t\telm: elm,\n\t\t} );\n\n\t}\n\n\tpublic getScreenPosition( windowSize: THREE.Vector2 ) {\n\n\t\tif ( this.position.x != this.position.x ) return new THREE.Vector2( NaN, NaN );\n\n\t\tconst p = this.position.clone()\n\t\t\t.divide( windowSize )\n\t\t\t.multiplyScalar( 2.0 )\n\t\t\t.subScalar( 1.0 );\n\t\tp.y *= - 1;\n\n\t\treturn p;\n\n\t}\n\n\tpublic getRelativePosition( elm: HTMLElement, screen?: boolean ) {\n\n\t\tconst rect: DOMRect = elm.getClientRects()[ 0 ] as DOMRect;\n\n\t\tlet x = this.position.x - rect.left;\n\t\tlet y = this.position.y - rect.top;\n\n\t\tif ( screen ) {\n\n\t\t\tx /= rect.width;\n\t\t\ty /= rect.height;\n\n\t\t}\n\n\t\tconst p = new THREE.Vector2( x, y );\n\n\t\treturn p;\n\n\t}\n\n\tprotected setPos( x: number, y: number ) {\n\n\t\tif (\n\t\t\tthis.position.x !== this.position.x ||\n\t\t\tthis.position.y !== this.position.y\n\t\t) {\n\n\t\t\tthis.delta.set( 0, 0 );\n\n\t\t} else {\n\n\t\t\tthis.delta.set( x - this.position.x, y - this.position.y );\n\n\t\t}\n\n\t\tthis.position.set( x, y );\n\n\t}\n\n\tprotected onTouch( type: string, e: TouchEvent ) {\n\n\t\tconst touch = e.touches[ 0 ];\n\n\t\tif ( touch ) {\n\n\t\t\tthis.touchEventHandler( touch.pageX, touch.pageY, type, e );\n\n\t\t} else {\n\n\t\t\tif ( type == 'end' ) {\n\n\t\t\t\tthis.touchEventHandler( NaN, NaN, type, e );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tprotected onPointer( type: string, e: PointerEvent | DragEvent ) {\n\n\t\tconst pointerType = ( e as PointerEvent ).pointerType;\n\n\t\tif ( pointerType != null ) {\n\n\t\t\tif ( pointerType == 'mouse' && ( e.button == - 1 || e.button == 0 ) ) {\n\n\t\t\t\tthis.touchEventHandler( e.pageX, e.pageY, type, e as PointerEvent );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.touchEventHandler( e.pageX, e.pageY, type, e );\n\n\t\t}\n\n\t}\n\n\tprotected touchEventHandler( posX: number, posY: number, type: string, e: TouchEvent | PointerEvent | DragEvent ) {\n\n\t\tlet dispatch = false;\n\n\t\tconst x = posX - window.pageXOffset;\n\t\tconst y = posY - window.pageYOffset;\n\n\t\tif ( type == \"start\" ) {\n\n\t\t\tthis.isTouching = true;\n\n\t\t\tthis.setPos( x, y );\n\n\t\t\tthis.delta.set( 0, 0 );\n\n\t\t\tdispatch = true;\n\n\t\t} else if ( type == \"move\" ) {\n\n\t\t\tthis.setPos( x, y );\n\n\t\t\tif ( this.isTouching ) {\n\n\t\t\t\tdispatch = true;\n\n\t\t\t}\n\n\t\t} else if ( type == \"end\" ) {\n\n\t\t\tif ( 'targetTouches' in e ) {\n\n\t\t\t\tif ( e.targetTouches.length == 0 ) {\n\n\t\t\t\t\tthis.isTouching = false;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.isTouching = false;\n\n\t\t\t}\n\n\t\t\tdispatch = true;\n\n\t\t}\n\n\t\tif ( dispatch ) {\n\n\t\t\tthis.dispatchEvent( {\n\t\t\t\ttype: 'update',\n\t\t\t\tpointerEvent: e,\n\t\t\t\tpointerEventType: type,\n\t\t\t\tposition: this.position.clone(),\n\t\t\t\tdelta: this.delta.clone()\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tpublic update() {\n\n\t\tif ( ! this.isSP ) {\n\n\t\t\tthis.dispatchEvent( {\n\t\t\t\ttype: 'update',\n\t\t\t\tpointerEvent: null,\n\t\t\t\tpointerEventType: 'hover',\n\t\t\t\tposition: this.position.clone(),\n\t\t\t\tdelta: this.delta.clone()\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tprotected trackpadMemDelta = 0;\n\tprotected trackpadMax = false;\n\n\tprotected wheel( e: WheelEvent ) {\n\n\t\tthis.dispatchEvent( {\n\t\t\ttype: 'wheel',\n\t\t\twheelEvent: e,\n\t\t} );\n\n\t}\n\n}\n","import * as THREE from 'three';\nimport { Pointer } from '../utils/Pointer';\nimport { BaseLayer } from './BaseLayer';\n\nexport declare interface PointerEventArgs {\n\tpointerEvent: PointerEvent;\n\tpointerEventType: string;\n\tposition: THREE.Vector2;\n\tdelta: THREE.Vector2;\n}\n\nexport declare interface ControllerParam {\n\tsilent?: boolean;\n\tpointerEventElement?: HTMLElement;\n}\n\nexport class Controller extends THREE.EventDispatcher {\n\n\tpublic pointer: Pointer;\n\tpublic clock: THREE.Clock;\n\n\tprotected layers: BaseLayer[] = [];\n\tprotected pointerEventElement?: HTMLElement;\n\n\tconstructor( parameter?: ControllerParam ) {\n\n\t\tsuper();\n\n\t\tif ( ! ( parameter && parameter.silent ) ) {\n\n\t\t\tconsole.log( \"%c- ore-three -\", 'padding: 5px 10px ;background-color: black; color: white;font-size:11px' );\n\n\t\t}\n\n\t\tthis.clock = new THREE.Clock();\n\n\t\t/*-------------------------------\n\t\t\tPointer\n\t\t-------------------------------*/\n\n\t\tthis.pointer = new Pointer();\n\t\tthis.setPointerEventElement( ( parameter && parameter.pointerEventElement ) || document.body );\n\n\t\t/*-------------------------------\n\t\t\tEvents\n\t\t-------------------------------*/\n\n\t\tconst pointerUpdate = this.pointerEvent.bind( this );\n\t\tconst pointerWheel = this.onWheel.bind( this );\n\t\tconst orientationchange = this.onOrientationDevice.bind( this );\n\t\tconst windowResize = this.onWindowResize.bind( this );\n\n\t\tthis.pointer.addEventListener( 'update', pointerUpdate );\n\t\tthis.pointer.addEventListener( 'wheel', pointerWheel );\n\t\twindow.addEventListener( 'orientationchange', orientationchange );\n\t\twindow.addEventListener( 'resize', windowResize );\n\n\t\tthis.addEventListener( 'dispose', () => {\n\n\t\t\tthis.pointer.removeEventListener( 'update', pointerUpdate );\n\t\t\tthis.pointer.removeEventListener( 'wheel', pointerWheel );\n\t\t\twindow.removeEventListener( 'orientationchange', orientationchange );\n\t\t\twindow.removeEventListener( 'resize', windowResize );\n\n\t\t} );\n\n\t\tthis.tick();\n\n\t}\n\n\tprotected tick() {\n\n\t\tconst deltaTime = this.clock.getDelta();\n\n\t\tthis.pointer.update();\n\n\t\tfor ( let i = 0; i < this.layers.length; i ++ ) {\n\n\t\t\tthis.layers[ i ].tick( deltaTime );\n\n\t\t}\n\n\t\trequestAnimationFrame( this.tick.bind( this ) );\n\n\t}\n\n\tprotected onWindowResize() {\n\n\t\tfor ( let i = 0; i < this.layers.length; i ++ ) {\n\n\t\t\tthis.layers[ i ].onResize();\n\n\t\t}\n\n\t}\n\n\tprotected onOrientationDevice() {\n\n\t\tthis.onWindowResize();\n\n\t}\n\n\tprotected pointerEvent( e: THREE.Event ) {\n\n\t\tfor ( let i = 0; i < this.layers.length; i ++ ) {\n\n\t\t\tthis.layers[ i ].pointerEvent( e as unknown as PointerEventArgs );\n\n\t\t}\n\n\t}\n\n\tprotected onWheel( e: THREE.Event ) {\n\n\t\tfor ( let i = 0; i < this.layers.length; i ++ ) {\n\n\t\t\tthis.layers[ i ].onWheel( e.wheelEvent, e.trackpadDelta );\n\n\t\t}\n\n\t}\n\n\t/*-------------------------------\n\t\tAPI\n\t-------------------------------*/\n\n\tpublic addLayer( layer: BaseLayer ) {\n\n\t\tthis.layers.push( layer );\n\n\t\tlayer.onBind();\n\n\t}\n\n\tpublic getLayer( layerName: string ) {\n\n\t\tfor ( let i = 0; i < this.layers.length; i ++ ) {\n\n\t\t\tif ( this.layers[ i ].info.name == layerName ) return this.layers[ i ];\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tpublic removeLayer( layerNmae: string ) {\n\n\t\tfor ( let i = this.layers.length - 1; i >= 0; i -- ) {\n\n\t\t\tconst layer = this.layers[ i ];\n\n\t\t\tif ( layer.info.name == layerNmae ) {\n\n\t\t\t\tlayer.onUnbind();\n\n\t\t\t\tthis.layers.splice( i, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tpublic setPointerEventElement( elm: HTMLElement ) {\n\n\t\tif ( this.pointerEventElement ) {\n\n\t\t\tthis.pointer.unregisterElement( this.pointerEventElement );\n\n\t\t}\n\n\t\tthis.pointer.registerElement( elm );\n\n\t\tthis.pointerEventElement = elm;\n\n\t}\n\n\tpublic dispose() {\n\n\t\tconst layerNameList = this.layers.map( layer => layer.info.name );\n\n\t\tlayerNameList.forEach( layerName => {\n\n\t\t\tthis.removeLayer( layerName );\n\n\t\t} );\n\n\t\tthis.tick = () => {\n\n\t\t\treturn;\n\n\t\t};\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n","\n/*-------------------------------\n\t\tBezier\n-------------------------------*/\n\nexport namespace Bezier {\n\n\texport type BezierControlPoints = {\n\t\tp0: number;\n\t\tp1: number;\n\t\tp2: number;\n\t\tp3: number;\n\t}\n\n\t// inspired https://github.com/gre/bezier-easing/blob/master/src/index.js and https://github.com/0b5vr/automaton/blob/872420e798d9054d4a7a06c972cbb4261a67b4bc/src/bezierEasing.ts\n\n\texport const NEWTON_ITERATIONS = 4;\n\texport const NEWTON_MIN_SLOPE = 0.001;\n\texport const SUBDIVISION_PRECISION = 0.0000001;\n\texport const SUBDIVISION_MAX_ITERATIONS = 10;\n\texport const BEZIER_EASING_CACHE_SIZE = 11;\n\texport const BEZIER_EASING_SAMPLE_STEP_SIZE = 1.0 / BEZIER_EASING_CACHE_SIZE;\n\n\tfunction calcBezierA( p: BezierControlPoints ) {\n\n\t\treturn - p.p0 + 3.0 * p.p1 - 3.0 * p.p2 + p.p3;\n\n\t}\n\tfunction calcBezierB( p: BezierControlPoints ) {\n\n\t\treturn 3.0 * p.p0 - 6.0 * p.p1 + 3.0 * p.p2;\n\n\t}\n\tfunction calcBezierC( p: BezierControlPoints ) {\n\n\t\treturn - 3.0 * p.p0 + 3.0 * p.p1;\n\n\t}\n\n\texport function calcBezierSlope( p: BezierControlPoints, t: number ) {\n\n\t\treturn 3.0 * calcBezierA( p ) * t * t + 2.0 * calcBezierB( p ) * t + calcBezierC( p );\n\n\t}\n\n\texport function calcBezier( p: BezierControlPoints, t: number ) {\n\n\t\treturn ( ( calcBezierA( p ) * t + calcBezierB( p ) ) * t + calcBezierC( p ) ) * t + p.p0;\n\n\t}\n\n\tfunction subdiv( x: number, startT: number, endT: number, p: BezierControlPoints ) {\n\n\t\tlet currentX = 0;\n\t\tlet currentT = 0;\n\n\t\tfor ( let i = 0; i < SUBDIVISION_MAX_ITERATIONS; i ++ ) {\n\n\t\t\tcurrentT = startT + ( endT - startT ) / 2;\n\t\t\tcurrentX = calcBezier( p, currentT );\n\n\t\t\tif ( currentX > x ) {\n\n\t\t\t\tendT = currentT;\n\n\t\t\t} else {\n\n\t\t\t\tstartT = currentT;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn currentT;\n\n\t}\n\n\tfunction newton( x:number, p: BezierControlPoints, t: number ) {\n\n\t\tfor ( let i = 0; i < NEWTON_ITERATIONS; i ++ ) {\n\n\t\t\tconst slope = calcBezierSlope( p, t );\n\n\t\t\tif ( slope == 0.0 ) {\n\n\t\t\t\treturn t;\n\n\t\t\t}\n\n\t\t\tconst currentX = ( calcBezier( p, t ) ) - x;\n\t\t\tt -= currentX / slope;\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\texport function getBezierTfromX( p: BezierControlPoints, x: number, cache: number[] ) {\n\n\t\tp.p1 = Math.max( p.p0, Math.min( p.p3, p.p1 ) );\n\t\tp.p2 = Math.max( p.p0, Math.min( p.p3, p.p2 ) );\n\n\t\tlet sample = 0;\n\n\t\tfor ( let i = 1; i < cache.length; i ++ ) {\n\n\t\t\tsample = i - 1;\n\t\t\tif ( x < cache[ i ] ) break;\n\n\t\t}\n\n\t\tconst t = sample / ( BEZIER_EASING_CACHE_SIZE - 1.0 );\n\t\tconst diff = calcBezierSlope( p, t ) / ( p.p3 - p.p0 );\n\n\t\tif ( diff == 0.0 ) {\n\n\t\t\treturn t;\n\n\t\t} else if ( diff > 0.01 ) {\n\n\t\t\treturn newton( x, p, t );\n\n\t\t} else {\n\n\t\t\treturn subdiv( x, t, t + BEZIER_EASING_SAMPLE_STEP_SIZE, p );\n\n\t\t}\n\n\n\t}\n\n}\n","import { Bezier } from \"./Bezier\";\n\nexport type EasingFunc = ( t: number ) => any\n\nexport namespace Easings {\n\n\texport function sigmoid( weight: number = 6 ): EasingFunc {\n\n\t\treturn ( x: number ) => {\n\n\t\t\tvar e1 = Math.exp( - weight * ( 2 * x - 1 ) );\n\t\t\tvar e2 = Math.exp( - weight );\n\n\t\t\treturn ( 1 + ( 1 - e1 ) / ( 1 + e1 ) * ( 1 + e2 ) / ( 1 - e2 ) ) / 2;\n\n\t\t};\n\n\t}\n\n\texport function smoothstep( min: number, max: number, value: number ): number {\n\n\t\tconst x = Math.max( 0, Math.min( 1, ( value - min ) / ( max - min ) ) );\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t}\n\n\t/*\n\t@auther https://gist.github.com/gre/1650294\n\t*/\n\n\texport function linear( t: number ) {\n\n\t\treturn t;\n\n\t}\n\n\texport function easeInQuad( t: number ) {\n\n\t\treturn t * t;\n\n\t}\n\n\texport function easeOutQuad( t: number ) {\n\n\t\treturn t * ( 2 - t );\n\n\t}\n\n\texport function easeInOutQuad( t: number ) {\n\n\t\treturn t < .5 ? 2 * t * t : - 1 + ( 4 - 2 * t ) * t;\n\n\t}\n\n\texport function easeInCubic( t: number ) {\n\n\t\treturn t * t * t;\n\n\t}\n\n\texport function easeOutCubic( t: number ) {\n\n\t\treturn ( -- t ) * t * t + 1;\n\n\t}\n\n\texport function easeInOutCubic( t: number ) {\n\n\t\treturn t < .5 ? 4 * t * t * t : ( t - 1 ) * ( 2 * t - 2 ) * ( 2 * t - 2 ) + 1;\n\n\t}\n\n\texport function easeInQuart( t: number ) {\n\n\t\treturn t * t * t * t;\n\n\t}\n\n\texport function easeOutQuart( t: number ) {\n\n\t\treturn 1 - ( -- t ) * t * t * t;\n\n\t}\n\n\texport function easeInOutQuart( t: number ) {\n\n\t\treturn t < .5 ? 8 * t * t * t * t : 1 - 8 * ( -- t ) * t * t * t;\n\n\t}\n\n\texport function easeInQuint( t: number ) {\n\n\t\treturn t * t * t * t * t;\n\n\t}\n\n\texport function easeOutQuint( t: number ) {\n\n\t\treturn 1 + ( -- t ) * t * t * t * t;\n\n\t}\n\n  \texport function easeInOutQuint( t: number ) {\n\n  \t\treturn t < .5 ? 16 * t * t * t * t * t : 1 + 16 * ( -- t ) * t * t * t * t;\n\n  \t}\n\n\texport function bezier( c1: THREE.Vec2, h1: THREE.Vec2, h2: THREE.Vec2, c2: THREE.Vec2 ): EasingFunc {\n\n\t\tvar cache = new Array( Bezier.BEZIER_EASING_CACHE_SIZE );\n\n\t\tfor ( var i = 0; i < Bezier.BEZIER_EASING_CACHE_SIZE; ++ i ) {\n\n\t\t\tcache[ i ] = Bezier.calcBezier( { p0: c1.x, p1: h1.x, p2: h2.x, p3: c2.x }, i / ( Bezier.BEZIER_EASING_CACHE_SIZE - 1.0 ) );\n\n\t\t}\n\n\t\treturn ( x: number ) => {\n\n\t\t\tif ( x <= c1.x ) return c1.y;\n\t\t\tif ( c2.x <= x ) return c2.y;\n\n\t\t\treturn Bezier.calcBezier( { p0: c1.y, p1: h1.y, p2: h2.y, p3: c2.y }, Bezier.getBezierTfromX( { p0: c1.x, p1: h1.x, p2: h2.x, p3: c2.x }, x, cache ) );\n\n\t\t};\n\n\t}\n\n\texport function cubicBezier( h1X: number, h1Y: number, h2X: number, h2Y: number ) {\n\n\t\treturn bezier(\n\t\t\t{ x: 0.0, y: 0.0 },\n\t\t\t{ x: h1X as number, y: h1Y as number },\n\t\t\t{ x: h2X as number, y: h2Y as number },\n\t\t\t{ x: 1.0, y: 1.0 },\n\t\t);\n\n\t}\n\n}\n","import { AnimatorVariableType } from \"./Animator\";\n\nexport declare interface LerpFunc<T>{\n\t( a: T, b: T, t: number ): T;\n}\n\nexport namespace Lerps {\n\n\texport function number( a: number, b: number, t: number ) {\n\n\t\treturn a + ( b - a ) * t;\n\n\t}\n\n\texport function numberArray( a: number[], b: number[], t: number ) {\n\n\t\tif ( a.length == b.length ) {\n\n\t\t\tconst c = [];\n\n\t\t\tfor ( let i = 0; i < a.length; i ++ ) {\n\n\t\t\t\tc.push( a[ i ] + ( b[ i ] - a[ i ] ) * t );\n\n\t\t\t}\n\n\t\t\treturn c;\n\n\t\t} else {\n\n\t\t\tconsole.log( 'Different length Arrays!!!' );\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\texport function THREEVectors( a: THREE.Vector2 & THREE.Vector3 & THREE.Vector4 & THREE.Color, b: THREE.Vector2 & THREE.Vector3 & THREE.Vector4 & THREE.Color, t: number ) {\n\n\t\treturn a.clone().lerp( b, t );\n\n\t}\n\n\texport function THREEQuaternion( a: THREE.Quaternion, b: THREE.Quaternion, t: number ) {\n\n\t\treturn a.clone().slerp( b, t );\n\n\t}\n\n\texport function THREEEuler( a: THREE.Euler, b: THREE.Euler, t: number ) {\n\n\t\tconst ac = a.clone();\n\t\tconst bc = b.clone();\n\n\t\tac.x = ac.x + ( bc.x - ac.x ) * t;\n\t\tac.y = ac.y + ( bc.y - ac.y ) * t;\n\t\tac.z = ac.z + ( bc.z - ac.z ) * t;\n\n\t\treturn ac;\n\n\t}\n\n\texport function getLerpFunc( value: AnimatorVariableType ) {\n\n\t\tif ( typeof ( value ) == 'number' ) {\n\n\t\t\treturn Lerps.number;\n\n\t\t} else if ( value instanceof Array ) {\n\n\t\t\treturn Lerps.numberArray;\n\n\t\t} else if ( \"isVector2\" in value || \"isVector3\" in value || \"isVector4\" in value || \"isColor\" in value ) {\n\n\t\t\treturn Lerps.THREEVectors;\n\n\t\t} else if ( \"isQuaternion\" in value ) {\n\n\t\t\treturn Lerps.THREEQuaternion;\n\n\t\t} else if ( \"isEuler\" in value ) {\n\n\t\t\treturn Lerps.THREEEuler;\n\n\t\t}\n\n\t}\n\n}\n","import * as THREE from 'three';\nimport { threadId } from 'worker_threads';\nimport { Easings, EasingFunc } from \"./Easings\";\nimport { LerpFunc, Lerps } from \"./Lerps\";\nimport { Uniforms } from \"./Uniforms\";\n\nexport type AnimatorVariableType = number | number[] | THREE.Vector2 | THREE.Vector3 | THREE.Vector4 | THREE.Quaternion | THREE.Euler\n\nexport declare interface AnimatorVariable<T>{\n\ttime: number;\n\tduration?: number;\n\tvalue: T;\n\tstartValue: T;\n\tgoalValue: T;\n\tonAnimationFinished?: Function | null;\n\tlerpFunc?: LerpFunc<T>;\n\teasing: EasingFunc;\n\tuserData?: any;\n}\n\nexport declare interface AnimatorVariableParams<T> {\n\tname: string;\n\tinitValue: T;\n\teasing?: EasingFunc;\n\tcustomLerpFunc?: LerpFunc<T>;\n\tuserData?: any;\n}\n\nexport class Animator extends THREE.EventDispatcher {\n\n\tpublic dataBase: {[ key: string ]: AnimatorVariableType };\n\tpublic isAnimating: boolean = false;\n\n\tprotected variables: { [ key: string ]: AnimatorVariable<AnimatorVariableType> };\n\tprotected animatingCount: number = 0;\n\tprotected dispatchEvents: Function[] = [];\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.variables = {};\n\t\tthis.dataBase = {};\n\n\t}\n\n\tpublic add<T extends AnimatorVariableType>( params: AnimatorVariableParams<T> ) {\n\n\t\tconst variable: AnimatorVariable<T> = {\n\t\t\ttime: - 1,\n\t\t\tvalue: this.getValueClone( params.initValue ),\n\t\t\tstartValue: this.getValueClone( params.initValue ),\n\t\t\tgoalValue: this.getValueClone( params.initValue ),\n\t\t\teasing: params.easing || Easings.sigmoid(),\n\t\t\tlerpFunc: ( params.customLerpFunc || Lerps.getLerpFunc( params.initValue ) ) as LerpFunc<T>,\n\t\t\tuserData: params.userData,\n\t\t};\n\n\t\tthis.dataBase[ params.name ] = variable.value;\n\t\tthis.variables[ params.name ] = variable as unknown as AnimatorVariable<AnimatorVariableType>;\n\n\t\tthis.dispatchEvent( {\n\t\t\ttype: 'added',\n\t\t\tvarName: params.name,\n\t\t\tvariable,\n\t\t} );\n\n\t\treturn variable;\n\n\t}\n\n\t/*-------------------------------\n\t\tSet\n\t-------------------------------*/\n\n\tpublic setEasing( name: string, easing: EasingFunc ) {\n\n\t\tconst variable = this.variables[ name ];\n\n\t\tif ( variable ) {\n\n\t\t\tvariable.easing = easing;\n\n\t\t} else {\n\n\t\t\tconsole.warn( '\"' + name + '\"' + ' is not exist' );\n\n\t\t}\n\n\t}\n\n\tpublic setValue<T extends AnimatorVariableType>( name: string, value: T ) {\n\n\t\tlet variable = this.dataBase[ name ] as unknown as AnimatorVariableType;\n\n\t\tif ( variable !== undefined ) {\n\n\t\t\tif ( typeof variable == 'number' ) {\n\n\t\t\t\tthis.dataBase[ name ] = value;\n\n\t\t\t} else if ( \"copy\" in variable ) {\n\n\t\t\t\tvariable.copy( value as any );\n\n\t\t\t} else if ( variable instanceof Array ) {\n\n\t\t\t\t( variable as number [] ) = ( value as number[] ).concat();\n\n\t\t\t}\n\n\t\t\tthis.updateDataBase( name );\n\t\t\tthis.cancelAnimate( name );\n\n\t\t} else {\n\n\t\t\tconsole.warn( '\"' + name + '\"' + ' is not exist' );\n\n\t\t\treturn null;\n\n\t\t}\n\n\t}\n\n\t/*-------------------------------\n\t\tAnimate\n\t-------------------------------*/\n\n\tpublic animate<T extends AnimatorVariableType>( name: string, goalValue: T, duration: number = 1, callback?: Function, easing?: EasingFunc ) {\n\n\t\tconst variable = this.variables[ name ];\n\t\tconst promise = new Promise( resolve => {\n\n\t\t\tif ( variable ) {\n\n\t\t\t\tif ( duration <= 0 ) {\n\n\t\t\t\t\tthis.setValue( name, goalValue );\n\n\t\t\t\t\tvariable.time = 1.0;\n\t\t\t\t\tvariable.onAnimationFinished = () => {\n\n\t\t\t\t\t\tcallback && callback();\n\t\t\t\t\t\tresolve( null );\n\n\t\t\t\t\t};\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( variable.time == - 1 ) {\n\n\t\t\t\t\tthis.isAnimating = true;\n\t\t\t\t\tthis.animatingCount ++;\n\n\t\t\t\t}\n\n\t\t\t\tvariable.time = 0;\n\t\t\t\tvariable.duration = duration;\n\t\t\t\tvariable.startValue = this.getValueClone( variable.value );\n\t\t\t\tvariable.goalValue = this.getValueClone( goalValue );\n\n\t\t\t\tvariable.onAnimationFinished = () => {\n\n\t\t\t\t\tcallback && callback();\n\t\t\t\t\tresolve( null );\n\n\t\t\t\t};\n\n\t\t\t\tif ( easing ) {\n\n\t\t\t\t\tthis.setEasing( name, easing );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( '\"' + name + '\"' + ' is not exist' );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn promise;\n\n\t}\n\n\tpublic cancelAnimate( name: string ) {\n\n\t\tconst variable = this.variables[ name ];\n\n\t\tif ( variable ) {\n\n\t\t\tvariable.time = 1.0;\n\t\t\tvariable.onAnimationFinished = null;\n\n\t\t} else {\n\n\t\t\tconsole.warn( '\"' + name + '\"' + ' is not exist' );\n\n\t\t}\n\n\t}\n\n\t/*-------------------------------\n\t\tGet\n\t-------------------------------*/\n\n\tpublic get<T extends AnimatorVariableType>( name: string ): T | null {\n\n\t\tif ( this.variables[ name ] ) {\n\n\t\t\treturn this.variables[ name ].value as unknown as T;\n\n\t\t} else {\n\n\t\t\tconsole.warn( '\"' + name + '\"' + ' is not exist' );\n\n\t\t\treturn null;\n\n\t\t}\n\n\t}\n\n\tpublic getVariableObject<T extends AnimatorVariableType>( name: string, mute: boolean = false ): AnimatorVariable<T> | null {\n\n\t\tif ( this.variables[ name ] ) {\n\n\t\t\treturn this.variables[ name ] as unknown as AnimatorVariable<T>;\n\n\t\t} else {\n\n\t\t\tif ( ! mute ) {\n\n\t\t\t\tconsole.warn( '\"' + name + '\"' + ' is not exist' );\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t}\n\n\t/*-------------------------------\n\t\tUtils\n\t-------------------------------*/\n\n\tpublic applyToUniforms( uniforms: Uniforms ) {\n\n\t\tconst keys = Object.keys( this.variables );\n\n\t\tfor ( let i = 0; i < keys.length; i ++ ) {\n\n\t\t\tconst variable = this.getVariableObject( keys[ i ] );\n\n\t\t\tif ( variable ) {\n\n\t\t\t\tuniforms[ keys[ i ] ] = variable;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tpublic isAnimatingVariable( name: string, mute: boolean = false ) {\n\n\t\tif ( this.variables[ name ] ) {\n\n\t\t\tconst time = this.variables[ name ].time;\n\n\t\t\treturn time != - 1.0;\n\n\t\t} else {\n\n\t\t\tif ( ! mute ) {\n\n\t\t\t\tconsole.warn( '\"' + name + '\"' + ' is not exist' );\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t}\n\n\t/*-------------------------------\n\t\tUtils\n\t-------------------------------*/\n\n\tprivate getValueClone<T extends AnimatorVariableType>( value: T ): T {\n\n\t\tif ( typeof value == 'number' ) {\n\n\t\t\treturn value;\n\n\t\t} else if ( 'clone' in value ) {\n\n\t\t\treturn value.clone() as T;\n\n\t\t} else if ( value instanceof Array ) {\n\n\t\t\treturn value.concat() as T;\n\n\t\t}\n\n\t\treturn value;\n\n\t}\n\n\tpublic wait( t: number ) {\n\n\t\tconst prm = new Promise<void>( ( r ) =>{\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tr();\n\n\t\t\t}, ( t * 1000 ) );\n\n\t\t} );\n\n\t\treturn prm;\n\n\t}\n\n\t/*-------------------------------\n\t\tUpdate\n\t-------------------------------*/\n\n\tpublic update( deltaTime?: number ) {\n\n\t\tif ( this.animatingCount == 0 ) {\n\n\t\t\tthis.isAnimating = false;\n\n\t\t}\n\n\t\tconst keys = Object.keys( this.variables );\n\n\t\tfor ( let i = 0; i < keys.length; i ++ ) {\n\n\t\t\tconst variableName = keys[ i ];\n\t\t\tconst variable = this.variables[ variableName ];\n\t\t\tlet time = variable.time;\n\n\t\t\tif ( time == 1.0 ) {\n\n\t\t\t\tthis.animatingCount --;\n\t\t\t\ttime = - 1;\n\n\t\t\t\tif ( variable.onAnimationFinished ) {\n\n\t\t\t\t\tthis.dispatchEvents.push( variable.onAnimationFinished );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= 0.0 && time < 1.0 ) {\n\n\t\t\t\tconst duration = variable.duration;\n\t\t\t\tconst easing = variable.easing;\n\t\t\t\tconst lerpFunc = variable.lerpFunc;\n\n\t\t\t\tif ( duration ) {\n\n\t\t\t\t\ttime += ( deltaTime || 0.016 ) / duration;\n\n\t\t\t\t\tif ( duration == 0 || time >= 1.0 ) {\n\n\t\t\t\t\t\ttime = 1.0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tlet value: AnimatorVariableType = variable.goalValue;\n\n\t\t\t\tif ( time < 1.0 ) {\n\n\t\t\t\t\tif ( lerpFunc ) {\n\n\t\t\t\t\t\tvalue = lerpFunc( variable.startValue, variable.goalValue, easing( time ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst dataBaseValue = this.dataBase[ variableName ];\n\n\t\t\t\tif ( typeof dataBaseValue == 'number' || ! ( 'copy' in dataBaseValue ) ) {\n\n\t\t\t\t\tthis.dataBase[ variableName ] = value;\n\n\t\t\t\t} else if ( 'copy' in dataBaseValue ) {\n\n\t\t\t\t\tdataBaseValue.copy( value as any );\n\n\t\t\t\t}\n\n\n\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\ttype: 'update/' + keys[ i ],\n\t\t\t\t\tdeltaTime: deltaTime,\n\t\t\t\t\tvalue: variable.value\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tvariable.time = time;\n\n\t\t}\n\n\t\twhile ( this.dispatchEvents.length != 0 ) {\n\n\t\t\tconst func = this.dispatchEvents.pop();\n\n\t\t\tif ( func ) {\n\n\t\t\t\tfunc();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.updateDataBase();\n\n\t\tthis.dispatchEvent( {\n\t\t\ttype: 'update',\n\t\t\tdeltaTime: deltaTime\n\t\t} );\n\n\t\tif ( this.isAnimating ) {\n\n\t\t\tthis.dispatchEvent( {\n\t\t\t\ttype: 'animate',\n\t\t\t\tdeltaTime: deltaTime\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tpublic updateDataBase( target?: string ) {\n\n\t\tif ( target ) {\n\n\t\t\tconst variable = this.variables[ target ];\n\t\t\tconst databaseValue = this.dataBase[ target ];\n\n\t\t\tif ( variable && databaseValue !== undefined ) {\n\n\t\t\t\tif ( typeof variable.value == 'number' || ! ( 'copy' in variable.value ) ) {\n\n\t\t\t\t\tvariable.value = databaseValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst key = Object.keys( this.dataBase );\n\n\t\tfor ( let i = 0; i < key.length; i ++ ) {\n\n\t\t\tconst variable = this.variables[ key[ i ] ];\n\t\t\tconst databaseValue = this.dataBase[ key[ i ] ];\n\n\t\t\tif ( variable && databaseValue !== undefined ) {\n\n\t\t\t\t// Vector系は参照なのでnumberとnumber[]あたりだけ更新\n\n\t\t\t\tif ( typeof variable.value == 'number' || ! ( 'copy' in variable.value ) ) {\n\n\t\t\t\t\tvariable.value = databaseValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\n\t}\n\n}\n","import * as THREE from 'three';\r\nimport EventEmitter from 'wolfy87-eventemitter';\r\nimport { Uniforms } from '../Uniforms';\r\nimport { FCurveGroup } from './FCurveGroup';\r\n\r\nexport type AnimationFrameInfo = {\r\n\tstart: number\r\n\tend: number\r\n\tduration: number\r\n}\r\n\r\nexport class AnimationAction extends EventEmitter {\r\n\r\n\tpublic name: string;\r\n\tpublic curves: {[key:string]:FCurveGroup} = {};\r\n\tprivate uniforms: Uniforms;\r\n\t\r\n\tpublic frame: AnimationFrameInfo;\r\n\r\n\tconstructor( name?: string ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.name = name || '';\r\n\t\tthis.uniforms = {};\r\n\r\n\t\tthis.frame = {\r\n\t\t\tstart: 0,\r\n\t\t\tend: 0,\r\n\t\t\tduration: 0,\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic addFcurveGroup( propertyName: string, fcurveGroup: FCurveGroup ) {\r\n\r\n\t\tthis.curves[ propertyName ] = fcurveGroup;\r\n\r\n\t\tthis.calcFrame();\r\n\r\n\t}\r\n\r\n\tpublic removeFCurve( propertyName: string ) {\r\n\r\n\t\tdelete this.curves[ propertyName ];\r\n\r\n\t\tthis.calcFrame();\r\n\t\t\r\n\t}\r\n\r\n\tprivate calcFrame() {\r\n\r\n\t\tlet curveKeys = Object.keys( this.curves )\r\n\r\n\t\tlet minStart = Infinity\r\n\t\tlet maxEnd = -Infinity\r\n\t\t\r\n\t\tfor ( let i = 0; i < curveKeys.length; i++ ) {\r\n\r\n\t\t\tlet curve = (this.curves)[ curveKeys[ i ] ];\r\n\r\n\t\t\tif( curve.frameStart < minStart ) {\r\n\r\n\t\t\t\tminStart = curve.frameStart;\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tif( curve.frameEnd > maxEnd ) {\r\n\r\n\t\t\t\tmaxEnd = curve.frameEnd;\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif( minStart == -Infinity || maxEnd == Infinity) {\r\n\r\n\t\t\tminStart = 0;\r\n\t\t\tmaxEnd = 1\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tthis.frame.start = minStart;\r\n\t\tthis.frame.end = maxEnd;\r\n\t\tthis.frame.duration = this.frame.end - this.frame.start;\r\n\r\n\t}\r\n\r\n\tpublic getFCurveGroup( propertyName: string ): FCurveGroup | null {\r\n\r\n\t\treturn this.curves[ propertyName ] || null;\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tget values\r\n\t-------------------------------*/\r\n\r\n\tpublic assignUniforms( propertyName: string, uniform: THREE.IUniform ) {\r\n\r\n\t\tthis.uniforms[ propertyName ] = uniform;\r\n\r\n\t}\r\n\r\n\tpublic getUniforms<T extends THREE.Vector2 | THREE.Vector3 | THREE.Vector4 | number>( propertyName: string ): THREE.IUniform<T> | null {\r\n\r\n\t\tif ( this.uniforms[ propertyName ] ) {\r\n\t\t\t\r\n\t\t\treturn this.uniforms[ propertyName ];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tlet curveGroup = this.getFCurveGroup(propertyName)\r\n\r\n\t\tif( curveGroup ) {\r\n\t\t\t\r\n\t\t\tlet uni = {\r\n\t\t\t\tvalue: curveGroup.createInitValue() as T\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tthis.uniforms[ propertyName ] = uni;\r\n\t\t\t\r\n\t\t\treturn uni;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tpublic getValue<T extends THREE.Vector2 | THREE.Vector3 | THREE.Vector4 | THREE.Euler | number>( propertyName: string ): T | null;\r\n\t\r\n\tpublic getValue<T extends THREE.Vector2 | THREE.Vector3 | THREE.Vector4 | THREE.Euler >( propertyName: string, target: T ): T;\r\n\t\r\n\tpublic getValue( propertyName: string, target?: THREE.Vector2 | THREE.Vector3 | THREE.Vector4 | THREE.Euler ): THREE.Vector2 | THREE.Vector3 | THREE.Vector4 | THREE.Euler | number | null {\r\n\r\n\t\tlet uniform = this.getUniforms(propertyName);\r\n\r\n\t\tif( !uniform ) return target || null;\r\n\r\n\t\tlet value = uniform.value;\r\n\t\t\r\n\t\tif( !target ) return value;\r\n\r\n\t\tif( typeof value == 'number' ) {\r\n\r\n\t\t\ttarget.x = value;\r\n\r\n\t\t\treturn target;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.x = value.x;\r\n\t\ttarget.y = value.y;\r\n\r\n\t\tif( 'z' in target && 'z' in value ) {\r\n\r\n\t\t\ttarget.z = value.z\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif( 'w' in target && 'w' in value ) {\r\n\r\n\t\t\ttarget.w = value.w\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn target || null;\r\n\r\n\t}\r\n\r\n\tpublic getValueAt<T extends number>( propertyName: string, frame: number ): T | null;\r\n\t\r\n\tpublic getValueAt<T extends THREE.Vector2 | THREE.Vector3 | THREE.Vector4 | THREE.Euler >( propertyName: string, frame: number, target: T ): T;\r\n\t\r\n\tpublic getValueAt( propertyName: string, frame: number, target?: THREE.Vector2 | THREE.Vector3 | THREE.Vector4 | THREE.Euler ): THREE.Vector2 | THREE.Vector3 | THREE.Vector4 | THREE.Euler | number | null {\r\n\r\n\t\tlet curve = this.getFCurveGroup( propertyName );\r\n\r\n\t\tif( target )  {\r\n\r\n\t\t\tif( !curve ) return target;\r\n\t\t\t\r\n\t\t\treturn curve.getValue( frame || 0, target )\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif( !curve ) return null;\r\n\t\t\t\t\r\n\t\t\treturn curve.getValue( frame )\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tUpdateFrame\r\n\t-------------------------------*/\r\n\t\r\n\tpublic updateFrame( frame: number ) {\r\n\r\n\t\tlet curveKeys = Object.keys( this.curves );\r\n\r\n\t\tfor ( let i = 0; i < curveKeys.length; i ++ ) {\r\n\r\n\t\t\tlet fcurveGroup = this.curves[ curveKeys[ i ] ];\r\n\t\t\tlet uni = this.getUniforms( curveKeys[ i ] );\r\n\r\n\t\t\tif( !uni ) continue;\r\n\r\n\t\t\tif( typeof uni.value == 'number' ) {\r\n\r\n\t\t\t\tuni.value = fcurveGroup.getValue(frame) || 0\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfcurveGroup.getValue(frame, uni.value)\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.emitEvent('update', [this] );\r\n\r\n\t}\r\n\r\n}\r\n","import EventEmitter from 'wolfy87-eventemitter';\r\nimport { FCurveKeyFrame } from './FCurveKeyFrame';\r\n\r\nexport type FCurveAxis = 'x' | 'y' | 'z' | 'w' | 'scalar'\r\n\r\nexport class FCurve extends EventEmitter {\r\n\r\n\tpublic keyframes: FCurveKeyFrame[] = [];\r\n\r\n\tprivate cache: { frame: number, value: number } = { frame: NaN, value: NaN };\r\n\r\n\tpublic frameStart: number;\r\n\tpublic frameEnd: number;\r\n\tpublic frameDuration: number;\r\n\r\n\tconstructor( frames?: FCurveKeyFrame[] ) {\r\n\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis.frameStart = 0;\r\n\t\tthis.frameEnd = 0;\r\n\t\tthis.frameDuration = 0;\r\n\t\t\r\n\t\tthis.set( frames );\r\n\r\n\t}\r\n\r\n\tpublic set( frames?: FCurveKeyFrame[] ) {\r\n\r\n\t\tif ( frames ) {\r\n\r\n\t\t\tthis.keyframes.length = 0;\r\n\r\n\t\t\tframes.forEach( keyframe => {\r\n\r\n\t\t\t\tthis.addKeyFrame( keyframe );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic addKeyFrame( keyframe: FCurveKeyFrame ) {\r\n\r\n\t\tlet index = 0;\r\n\r\n\t\tfor ( let i = 0; i < this.keyframes.length; i ++ ) {\r\n\r\n\t\t\tlet frame = this.keyframes[ i ];\r\n\r\n\t\t\tif ( frame.coordinate.x < keyframe.coordinate.x ) {\r\n\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.keyframes.splice( index, 0, keyframe );\r\n\r\n\t\t// set frame info\r\n\t\t\r\n\t\tthis.frameStart = this.keyframes[0].coordinate.x\r\n\t\tthis.frameEnd = this.keyframes[this.keyframes.length - 1].coordinate.x\r\n\r\n\t}\r\n\r\n\tpublic getValue( frame: number ) {\r\n\r\n\t\tif ( frame == this.cache.frame ) {\r\n\r\n\t\t\treturn this.cache.value;\r\n\r\n\t\t}\r\n\r\n\t\tlet value: number | null = null;\r\n\r\n\t\tfor ( let i = 0; i < this.keyframes.length; i ++ ) {\r\n\r\n\t\t\tlet keyframe = this.keyframes[ i ];\r\n\r\n\t\t\tif ( frame <= keyframe.coordinate.x ) {\r\n\r\n\t\t\t\tlet beforeKeyFrame = this.keyframes[ i - 1 ];\r\n\r\n\t\t\t\tif ( beforeKeyFrame ) {\r\n\r\n\t\t\t\t\tvalue = beforeKeyFrame.to( keyframe, frame );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvalue = keyframe.coordinate.y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( value === null && this.keyframes.length > 0 ) {\r\n\r\n\t\t\tvalue = this.keyframes[ this.keyframes.length - 1 ].coordinate.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( value !== null ) {\r\n\r\n\t\t\tthis.cache = {\r\n\t\t\t\tframe: frame,\r\n\t\t\t\tvalue: value\r\n\t\t\t};\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n}\r\n","import * as THREE from 'three';\r\nimport EventEmitter from 'wolfy87-eventemitter';\r\nimport { FCurve, FCurveAxis } from './FCurve';\r\n\r\nexport type FCurveGroupType = 'scalar' | 'vec2' | 'vec3' | 'vec4'\r\n\r\nexport class FCurveGroup extends EventEmitter {\r\n\r\n\tpublic name: string;\r\n\tpublic curve: {[axis in FCurveAxis]: FCurve | null};\r\n\tpublic type: FCurveGroupType = 'scalar';\r\n\r\n\tpublic frameStart: number;\r\n\tpublic frameEnd: number;\r\n\tpublic frameDuration: number;\r\n\r\n\tconstructor( name?: string, x?: FCurve, y?: FCurve, z?: FCurve, w?: FCurve, scalar?: FCurve ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.name = name || '';\r\n\t\t\r\n\t\tthis.frameStart = 0;\r\n\t\tthis.frameEnd = 0;\r\n\t\tthis.frameDuration = 0;\r\n\t\t\r\n\t\tthis.curve = {\r\n\t\t\tx: null,\r\n\t\t\ty: null,\r\n\t\t\tz: null,\r\n\t\t\tw: null,\r\n\t\t\tscalar: null\r\n\t\t};\r\n\r\n\t\tif( x ) {\r\n\r\n\t\t\tthis.setFCurve( x, 'x' )\r\n\r\n\t\t}\r\n\t\t\r\n\t\tif( y ) {\r\n\r\n\t\t\tthis.setFCurve( y, 'y' )\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif( z ) {\r\n\r\n\t\t\tthis.setFCurve( z, 'z' )\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif( w ) {\r\n\r\n\t\t\tthis.setFCurve( w, 'w' )\r\n\t\t\t\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic setFCurve( curve: FCurve, axis: FCurveAxis ) {\r\n\r\n\t\tthis.curve[ axis ] = curve;\r\n\r\n\t\tthis.calcType();\r\n\t\tthis.calcFrame();\r\n\r\n\t}\r\n\r\n\tpublic calcType() {\r\n\r\n\t\tif ( this.curve.scalar ) {\r\n\r\n\t\t\tthis.type = 'scalar';\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.curve.w ) {\r\n\r\n\t\t\tthis.type = 'vec4';\r\n\r\n\t\t} else if ( this.curve.z ) {\r\n\r\n\t\t\tthis.type = 'vec3';\r\n\r\n\t\t} else if ( this.curve.y ) {\r\n\r\n\t\t\tthis.type = 'vec2';\r\n\r\n\t\t} else if ( this.curve.x ) {\r\n\r\n\t\t\tthis.type = 'scalar';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\tprivate calcFrame() {\r\n\t\t\r\n\t\tlet curveKeys = Object.keys( this.curve )\r\n\r\n\t\tlet minStart = Infinity\r\n\t\tlet maxEnd = -Infinity\r\n\t\t\r\n\t\tfor ( let i = 0; i < curveKeys.length; i++ ) {\r\n\r\n\t\t\tlet curve = (this.curve as {[key: string]: FCurve})[ curveKeys[ i ] ];\r\n\r\n\t\t\tif( !curve ) continue;\r\n\r\n\t\t\tif( curve.frameStart < minStart ) {\r\n\r\n\t\t\t\tminStart = curve.frameStart;\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tif( curve.frameEnd > maxEnd ) {\r\n\r\n\t\t\t\tmaxEnd = curve.frameEnd;\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif( minStart == -Infinity || maxEnd == Infinity) {\r\n\r\n\t\t\tminStart = 0;\r\n\t\t\tmaxEnd = 1\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tthis.frameStart = minStart;\r\n\t\tthis.frameEnd = maxEnd;\r\n\t\tthis.frameDuration = this.frameEnd - this.frameStart;\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic createInitValue() {\r\n\r\n\t\tif ( this.type == 'vec2' ) {\r\n\r\n\t\t\treturn new THREE.Vector2();\r\n\r\n\t\t} else if ( this.type == 'vec3' ) {\r\n\r\n\t\t\treturn new THREE.Vector3();\r\n\r\n\t\t} else if ( this.type == 'vec4' ) {\r\n\r\n\t\t\treturn new THREE.Vector4();\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\tpublic getValue<T extends THREE.Vector2 | THREE.Vector3 | THREE.Vector4 | THREE.Euler>( frame: number, target: T ): T;\r\n\r\n\tpublic getValue( frame: number ): number | null;\r\n\r\n\tpublic getValue<T extends THREE.Vector2 | THREE.Vector3 | THREE.Vector4 | THREE.Euler>( frame: number, target?: T): T | number | null {\r\n\r\n\t\tif( target ) {\r\n\r\n\t\t\tif ( this.curve.x ) {\r\n\r\n\t\t\t\ttarget.x = this.curve.x.getValue( frame );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.curve.y ) {\r\n\r\n\t\t\t\ttarget.y = this.curve.y.getValue( frame );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.curve.z && 'z' in target ) {\r\n\r\n\t\t\t\ttarget.z = this.curve.z.getValue( frame );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.curve.w  && 'w' in target ) {\r\n\r\n\t\t\t\ttarget.w = this.curve.w.getValue( frame );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target;\r\n\t\t\t\r\n\t\t} else {\r\n\r\n\t\t\tif ( this.curve.scalar ) {\r\n\t\t\t\t\t\t\r\n\t\t\t\treturn  this.curve.scalar.getValue( frame );\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\t\r\n}\r\n","import * as THREE from 'three';\r\nimport EventEmitter from 'wolfy87-eventemitter';\r\nimport { EasingFunc, Easings } from '../Easings';\r\n\r\nexport type FCurveInterpolation = \"BEZIER\" | \"LINEAR\";\r\n\r\nexport class FCurveKeyFrame extends EventEmitter {\r\n\r\n\tpublic coordinate: THREE.Vec2 = { x: 0, y: 0 };\r\n\tpublic handleLeft: THREE.Vec2 = { x: 0, y: 0 };\r\n\tpublic handleRight: THREE.Vec2 = { x: 0, y: 0 };\r\n\tpublic interpolation: FCurveInterpolation = 'BEZIER';\r\n\r\n\tprivate easing: EasingFunc | null = null;\r\n\tprivate nextFrame: FCurveKeyFrame | null = null;\r\n\r\n\tconstructor( coordinate: THREE.Vec2, handleLeft?: THREE.Vec2, handleRight?: THREE.Vec2, interpolation?: FCurveInterpolation ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.set( coordinate, handleLeft, handleRight, interpolation );\r\n\r\n\t}\r\n\r\n\tpublic set( coordinate: THREE.Vec2, handleLeft?: THREE.Vec2, handleRight?: THREE.Vec2, interpolation?: FCurveInterpolation ) {\r\n\r\n\t\tthis.coordinate = coordinate;\r\n\t\tthis.handleLeft = handleLeft || coordinate;\r\n\t\tthis.handleRight = handleRight || coordinate;\r\n\t\tthis.interpolation = interpolation || 'BEZIER';\r\n\r\n\t}\r\n\r\n\tprivate getEasing( interpolation: FCurveInterpolation, nextFrame: FCurveKeyFrame ) {\r\n\r\n\t\tif ( interpolation == 'BEZIER' ) {\r\n\r\n\t\t\treturn Easings.bezier( this.coordinate, this.handleRight, nextFrame.handleLeft, nextFrame.coordinate );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn ( t: number ) => {\r\n\r\n\t\t\t\tlet d = ( nextFrame.coordinate.y - this.coordinate.y );\r\n\t\t\t\tt = ( t - this.coordinate.x ) / ( nextFrame.coordinate.x - this.coordinate.x );\r\n\r\n\t\t\t\treturn this.coordinate.y + t * d;\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic to( nextFrame: FCurveKeyFrame, t: number ) {\r\n\r\n\t\tif ( this.nextFrame == null || this.nextFrame.coordinate.x != nextFrame.coordinate.x || this.nextFrame.coordinate.y != nextFrame.coordinate.y ) {\r\n\r\n\t\t\tthis.easing = this.getEasing( this.interpolation, nextFrame );\r\n\t\t\tthis.nextFrame = nextFrame;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.easing ) {\r\n\r\n\t\t\treturn this.easing( t );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn 0;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","import * as THREE from 'three';\r\n\r\nimport EventEmitter from \"wolfy87-eventemitter\";\r\nimport { AnimationAction } from \"../Animation/AnimationAction\";\r\nimport { FCurve } from \"../Animation/FCurve\";\r\nimport { FCurveGroup } from '../Animation/FCurveGroup';\r\nimport { FCurveInterpolation, FCurveKeyFrame } from \"../Animation/FCurveKeyFrame\";\r\nimport { Uniforms } from '../Uniforms';\r\n\r\nexport type BCMessage = BCSyncSceneMessage | BCSyncFrameMessage\r\nexport type BCAnimationCurveAxis = 'x' | 'y' | 'z' | 'w' | 'scalar'\r\n\r\nexport type BCSyncSceneMessage = {\r\n\ttype: \"sync/scene\",\r\n    data: BCSceneData;\r\n}\r\n\r\nexport type BCSceneData = {\r\n\tactions: BCAnimationActionParam[];\r\n    objects: BCSceneObjectData[];\r\n}\r\n\r\nexport type BCAnimationActionParam = {\r\n    name: string;\r\n    fcurve_groups: {[key: string]: BCAnimationCurveParam[]};\r\n}\r\n\r\nexport type BCAnimationCurveParam = {\r\n    keyframes: BCAnimationCurveKeyFrameParam[];\r\n\taxis: BCAnimationCurveAxis\r\n}\r\n\r\nexport type BCAnimationCurveKeyFrameParam = {\r\n    c: THREE.Vec2;\r\n    h_l: THREE.Vec2;\r\n    h_r: THREE.Vec2;\r\n    e: string;\r\n    i: FCurveInterpolation;\r\n}\r\n\r\nexport type BCSceneObjectData = {\r\n\tname: string,\r\n\tactions: string[]\r\n}\r\n\r\nexport type BCSyncFrameMessage = {\r\n\ttype: \"sync/timeline\";\r\n\tdata: BCTimelineData;\r\n}\r\n\r\nexport type BCTimelineData = {\r\n\tstart: number;\r\n\tend: number;\r\n\tcurrent: number;\r\n}\r\n\r\nexport class BlenderConnector extends EventEmitter {\r\n\r\n\t// ws\r\n\r\n\tprivate url?: string;\r\n\tprivate ws?: WebSocket;\r\n\tpublic connected: boolean = false;\r\n\r\n\t// frame\r\n\r\n\tpublic frameCurrent: number = 0;\r\n\tpublic frameStart: number = 0;\r\n\tpublic frameEnd: number = 0;\r\n\r\n\t// animation\r\n\r\n\tpublic objects: BCSceneObjectData[] = [];\r\n\tpublic actions: AnimationAction[] = [];\r\n\r\n\tconstructor( url?: string ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tif ( url ) {\r\n\r\n\t\t\tthis.url = url;\r\n\t\t\tthis.connect( this.url );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic connect( url: string ) {\r\n\r\n\t\tthis.url = url;\r\n\t\tthis.ws = new WebSocket( this.url );\r\n\t\tthis.ws.onopen = this.onOpen.bind( this );\r\n\t\tthis.ws.onmessage = this.onMessage.bind( this );\r\n\t\tthis.ws.onclose = this.onClose.bind( this );\r\n\t\tthis.ws.onerror = ( e ) => {\r\n\r\n\t\t\tconsole.error( e );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tpublic syncJsonScene( jsonPath: string ) {\r\n\r\n\t\tlet req = new XMLHttpRequest();\r\n\r\n\t\treq.onreadystatechange = () => {\r\n\r\n\t\t\tif ( req.readyState == 4 ) {\r\n\r\n\t\t\t\tif ( req.status == 200 ) {\r\n\r\n\t\t\t\t\tthis.onSyncScene( JSON.parse( req.response ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\treq.open( 'GET', jsonPath );\r\n\t\treq.send( );\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tEvents\r\n\t-------------------------------*/\r\n\r\n\tprivate onSyncScene( data: BCSceneData ) {\r\n\r\n\t\tthis.actions.length = 0;\r\n\t\tthis.objects.length = 0;\r\n\r\n\t\t// actions\r\n\r\n\t\tdata.actions.forEach( actionData => {\r\n\r\n\t\t\tlet action = new AnimationAction( actionData.name );\r\n\r\n\t\t\tlet fcurveGroupNames = Object.keys(actionData.fcurve_groups)\r\n\r\n\t\t\tfor ( let i = 0; i < fcurveGroupNames.length; i++ ) {\r\n\r\n\t\t\t\tlet fcurveGroupName = fcurveGroupNames[i];\r\n\t\t\t\t\r\n\t\t\t\tlet fcurveGroup = new FCurveGroup( fcurveGroupName );\r\n\t\t\t\t\r\n\t\t\t\tactionData.fcurve_groups[fcurveGroupName].forEach( fcurveData => {\r\n\r\n\t\t\t\t\tlet curve = new FCurve();\r\n\t\t\t\t\t\r\n\t\t\t\t\tcurve.set( fcurveData.keyframes.map( frame => {\r\n\t\r\n\t\t\t\t\t\treturn new FCurveKeyFrame( frame.c, frame.h_l, frame.h_r, frame.i );\r\n\t\r\n\t\t\t\t\t} ) );\r\n\t\t\t\t\t\r\n\t\t\t\t\tfcurveGroup.setFCurve( curve, fcurveData.axis );\r\n\t\r\n\t\t\t\t} );\r\n\r\n\t\t\t\taction.addFcurveGroup( fcurveGroup.name, fcurveGroup );\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tthis.actions.push( action );\r\n\r\n\t\t} );\r\n\r\n\t\t// objects\r\n\r\n\t\tdata.objects.forEach( objectData => {\r\n\r\n\t\t\tthis.objects.push( objectData );\r\n\r\n\t\t} );\r\n\r\n\t\t// dispatch event\r\n\t\t\r\n\t\tthis.emitEvent('update/scene', [this])\r\n\r\n\t\tthis.setTimeline(this.frameCurrent);\r\n\r\n\t}\r\n\r\n\tprivate onSyncTimeline( data: BCTimelineData ) {\r\n\r\n\t\tthis.setTimeline( data.current, data.start, data.end );\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tWS Events\r\n\t-------------------------------*/\r\n\r\n\tprivate onOpen( event: Event ) {\r\n\r\n\t\tthis.connected = true;\r\n\r\n\t}\r\n\r\n\tprivate onMessage( e: MessageEvent ) {\r\n\r\n\t\tlet msg = JSON.parse( e.data ) as BCMessage;\r\n\r\n\t\tif ( msg.type == 'sync/scene' ) {\r\n\r\n\t\t\tthis.onSyncScene( msg.data );\r\n\r\n\t\t} else if ( msg.type == \"sync/timeline\" ) {\r\n\r\n\t\t\tthis.onSyncTimeline( msg.data );\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate onClose( e:CloseEvent ) {\r\n\r\n\t\tthis.disposeWS();\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tAPI\r\n\t-------------------------------*/\r\n\r\n\tpublic getActionNameList( objectName: string ) {\r\n\r\n\t\tfor ( let i = 0; i < this.objects.length; i ++ ) {\r\n\r\n\t\t\tif ( this.objects[ i ].name == objectName ) {\r\n\r\n\t\t\t\treturn this.objects[ i ].actions;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\r\n\t}\r\n\r\n\tpublic getAction( actionName: string ) {\r\n\r\n\t\tfor ( let i = 0; i < this.actions.length; i ++ ) {\r\n\r\n\t\t\tif ( this.actions[ i ].name == actionName ) {\r\n\r\n\t\t\t\treturn this.actions[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tpublic getActionList( objectName: string ) {\r\n\r\n\t\tlet actions: AnimationAction[] = [];\r\n\t\tlet actionNameList = this.getActionNameList( objectName );\r\n\r\n\t\tactionNameList.forEach( actionName => {\r\n\r\n\t\t\tlet action = this.getAction( actionName );\r\n\r\n\t\t\tif ( action ) {\r\n\r\n\t\t\t\tactions.push( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\treturn actions;\r\n\r\n\t}\r\n\r\n\tpublic getActionContainsAccessor( accessor: string ) {\r\n\r\n\t\treturn this.actions.find(action => {\r\n\r\n\t\t\tlet curveKeys = Object.keys( action.curves );\r\n\r\n\t\t\treturn curveKeys.some(curveName => curveName==accessor)\r\n\t\t\t\r\n\t\t}) || null\r\n\t\t\r\n\t}\r\n\r\n\tpublic setTimeline( current: number, start?:number, end?:number ) {\r\n\r\n\t\tthis.frameCurrent = current;\r\n\t\tthis.frameStart = start || this.frameStart;\r\n\t\tthis.frameEnd = end || this.frameEnd;\r\n\r\n\t\tthis.emitEvent( 'update/timeline', [ this.frameCurrent, this.frameStart, this.frameEnd ] );\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tDispose\r\n\t-------------------------------*/\r\n\r\n\tpublic dispose() {\r\n\r\n\t\tthis.disposeWS();\r\n\r\n\t}\r\n\r\n\tpublic disposeWS() {\r\n\r\n\t\tif ( this.ws ) {\r\n\r\n\t\t\tthis.ws.close();\r\n\t\t\tthis.ws.onmessage = null;\r\n\t\t\tthis.ws.onclose = null;\r\n\t\t\tthis.ws.onopen = null;\r\n\r\n\t\t\tthis.connected = false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","import * as THREE from 'three';\r\n\r\nexport interface Uniforms{ [ key: string ] : THREE.IUniform }\r\n\r\nexport namespace UniformsLib {\r\n\r\n\texport function mergeUniforms( ...uniforms: ( Uniforms|undefined )[] ) : Uniforms {\r\n\r\n\t\tconst res = {};\r\n\r\n\t\tfor ( let i = 0; i < uniforms.length; i ++ ) {\r\n\r\n\t\t\tif ( uniforms[ i ] != undefined ) {\r\n\r\n\t\t\t\tObject.assign( res, uniforms[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\r\n\t}\r\n\r\n}\r\n","import * as THREE from 'three';\n\nimport vert from './shaders/passThrough.vs';\nimport passThroughFrag from './shaders/passThrough.fs';\nimport { Uniforms, UniformsLib } from '../Uniforms';\n\nexport interface GPUComputationKernel{\n    material: THREE.RawShaderMaterial,\n    uniforms: any,\n}\n\nexport interface GPUcomputationData{\n    buffer: THREE.WebGLRenderTarget\n}\n\nexport class GPUComputationController {\n\n\tprotected renderer: THREE.WebGLRenderer;\n\tpublic dataSize: THREE.Vector2;\n\tprotected uniforms: any;\n\n\tprotected scene: THREE.Scene;\n\tprotected camera: THREE.Camera;\n\n\tprotected mesh: THREE.Mesh;\n\tprotected materials: THREE.ShaderMaterial[];\n\n\tprotected tempDataLinear: GPUcomputationData;\n\tprotected tempDataNear: GPUcomputationData;\n\n\tprivate renderTargets: THREE.WebGLRenderTarget[] = [];\n\n\tpublic get isSupported() : boolean {\n\n    \treturn this.renderer.extensions.get( \"OES_texture_float\" );\n\n\t}\n\n\tconstructor( renderer: THREE.WebGLRenderer, dataSize: THREE.Vector2 ) {\n\n    \tthis.renderer = renderer;\n    \tthis.dataSize = dataSize.clone();\n\n    \tthis.uniforms = {\n    \t\tdataSize: {\n    \t\t\tvalue: this.dataSize\n    \t\t}\n    \t};\n\n    \tthis.tempDataLinear = this.createData( {\n    \t\tminFilter: THREE.LinearFilter,\n    \t\tmagFilter: THREE.LinearFilter\n    \t} );\n\n    \tthis.tempDataNear = this.createData( {\n    \t\tminFilter: THREE.NearestFilter,\n    \t\tmagFilter: THREE.NearestFilter\n    \t} );\n\n    \tthis.scene = new THREE.Scene();\n    \tthis.camera = new THREE.Camera();\n\n    \tthis.materials = [];\n    \tthis.mesh = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ) );\n    \tthis.scene.add( this.mesh );\n\n\t}\n\n\tpublic createInitializeTexture() {\n\n    \tlet a = new Float32Array( this.uniforms.dataSize.value.x * this.uniforms.dataSize.value.y * 4 );\n    \tlet texture = new THREE.DataTexture( a, this.uniforms.dataSize.value.x, this.uniforms.dataSize.value.y, THREE.RGBAFormat, THREE.FloatType );\n    \ttexture.needsUpdate = true;\n\n    \treturn texture;\n\n\t}\n\n\tpublic createData(): GPUcomputationData;\n\n\tpublic createData( initializeTexture: THREE.DataTexture ): GPUcomputationData;\n\n\tpublic createData( textureParam: THREE.WebGLRenderTargetOptions ): GPUcomputationData;\n\n\tpublic createData( initializeTexture: THREE.DataTexture, textureParam: THREE.WebGLRenderTargetOptions ): GPUcomputationData;\n\n\tpublic createData( initTex_texParam?: any, textureParam? : THREE.WebGLRenderTargetOptions ): GPUcomputationData {\n\n    \tlet userAgent = navigator.userAgent;\n    \tlet isiOS = userAgent.indexOf( 'iPhone' ) >= 0 || userAgent.indexOf( 'iPad' ) >= 0 || navigator.platform == \"iPad\" || ( navigator.platform == \"MacIntel\" && navigator.userAgent.indexOf( \"Safari\" ) != - 1 && navigator.userAgent.indexOf( \"Chrome\" ) == - 1 && ( navigator as any ).standalone !== undefined );\n\n    \tlet param: THREE.WebGLRenderTargetOptions = {\n    \t\twrapS: THREE.ClampToEdgeWrapping,\n    \t\twrapT: THREE.ClampToEdgeWrapping,\n    \t\tminFilter: THREE.NearestFilter,\n    \t\tmagFilter: THREE.NearestFilter,\n    \t\tformat: THREE.RGBAFormat,\n    \t\ttype: isiOS ? THREE.HalfFloatType : THREE.FloatType,\n    \t\tstencilBuffer: false,\n    \t\tdepthBuffer: false\n    \t};\n    \tlet initTex: THREE.DataTexture | null = null;\n    \tlet customParam: THREE.WebGLRenderTargetOptions | null = null;\n\n    \tif ( initTex_texParam ) {\n\n    \t\tif ( initTex_texParam.isDataTexture ) {\n\n    \t\t\tinitTex = initTex_texParam;\n\n    \t\t\tif ( textureParam ) {\n\n    \t\t\t\tcustomParam = textureParam;\n\n    \t\t\t}\n\n    \t\t} else {\n\n    \t\t\tcustomParam = initTex_texParam;\n\n    \t\t}\n\n    \t}\n\n    \tif ( customParam ) {\n\n    \t\tparam.wrapS = customParam.wrapS || param.wrapS;\n    \t\tparam.wrapT = customParam.wrapT || param.wrapT;\n    \t\tparam.minFilter = customParam.minFilter || param.minFilter;\n    \t\tparam.magFilter = customParam.magFilter || param.magFilter;\n    \t\tparam.format = customParam.format || param.format;\n    \t\tparam.type = customParam.type || param.type;\n    \t\tparam.stencilBuffer = customParam.stencilBuffer || param.stencilBuffer;\n    \t\tparam.depthBuffer = customParam.depthBuffer || param.depthBuffer;\n\n    \t}\n\n    \tlet buf = new THREE.WebGLRenderTarget( this.uniforms.dataSize.value.x, this.uniforms.dataSize.value.y, param );\n\n\t\tlet data = { buffer: buf };\n\n\t\tthis.renderTargets.push( buf );\n\n    \tif ( initTex ) {\n\n    \t\tlet initKernel = this.createKernel( {\n\t\t\t\tfragmentShader: passThroughFrag,\n\t\t\t\tuniforms: {\n\t\t\t\t\ttex: {\n\t\t\t\t\t\tvalue: initTex\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n    \t\tthis.compute( initKernel, data );\n\n    \t}\n\n    \treturn data;\n\n\t}\n\n\tpublic createKernel( param: THREE.ShaderMaterialParameters ): GPUComputationKernel {\n\n    \tlet uni: Uniforms = UniformsLib.mergeUniforms( param.uniforms, this.uniforms );\n\n\t\tparam.uniforms = uni;\n\t\tparam.vertexShader = param.vertexShader || vert;\n\n    \tlet mat = new THREE.ShaderMaterial( param );\n\n    \tthis.materials.push( mat );\n\n    \tlet kernel: GPUComputationKernel = {\n    \t\tmaterial: mat,\n    \t\tuniforms: param.uniforms\n    \t};\n\n    \treturn kernel;\n\n\t}\n\n\tpublic compute( kernel: GPUComputationKernel, data: GPUcomputationData, camera?: THREE.Camera ) {\n\n    \tlet temp: GPUcomputationData;\n\n    \tif ( data.buffer.texture.magFilter == THREE.LinearFilter ) {\n\n    \t\ttemp = this.tempDataLinear;\n\n    \t} else {\n\n    \t\ttemp = this.tempDataNear;\n\n    \t}\n\n    \tthis.mesh.material = kernel.material;\n\n    \tlet currentRenderTarget = this.renderer.getRenderTarget();\n\n    \tthis.renderer.setRenderTarget( temp.buffer );\n\n    \tthis.renderer.render( this.scene, camera || this.camera );\n\n    \tthis.swapBuffers( data, temp );\n\n    \tthis.renderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\tprotected swapBuffers( b1: GPUcomputationData, b2: GPUcomputationData ) {\n\n    \tlet tmp = b1.buffer;\n    \tb1.buffer = b2.buffer;\n    \tb2.buffer = tmp;\n\n\t}\n\n\tpublic dispose() {\n\n    \tlet geo = this.mesh.geometry;\n    \tgeo.dispose();\n\n    \tfor ( let i = 0; i < this.materials.length; i ++ ) {\n\n    \t\tthis.materials[ i ].dispose();\n\n    \t}\n\n    \tthis.scene.remove( this.mesh );\n\n    \tthis.tempDataLinear.buffer.dispose();\n    \tthis.tempDataNear.buffer.dispose();\n\n\t}\n\n\tpublic resizeData( dataSize: THREE.Vector2 ) {\n\n\t\tthis.dataSize.copy( dataSize );\n\n\t\tfor ( let i = 0; i < this.renderTargets.length; i ++ ) {\n\n\t\t\tlet target = this.renderTargets[ i ];\n\n\t\t\ttarget.setSize( dataSize.x, dataSize.y );\n\n\t\t}\n\n\t}\n\n}\n","import * as THREE from 'three';\n\nimport passThrowVert from './shaders/passThrow.vs';\n\ntype InputRenderTarget = { [key:string]: THREE.Texture | THREE.Texture[] };\n\nexport interface PPParam extends THREE.ShaderMaterialParameters{\n\tinputRenderTargets?: string\n}\n\nexport class PostProcessing {\n\n\tprivate renderer: THREE.WebGLRenderer;\n\tprivate scene: THREE.Scene;\n\tprivate camera: THREE.OrthographicCamera;\n\tprivate screen: THREE.Mesh;\n\n\tpublic effect: {\n\t\tmaterial: THREE.ShaderMaterial,\n\t};\n\n\tconstructor( renderer: THREE.WebGLRenderer, ppParam: PPParam, customGeometry?: THREE.BufferGeometry ) {\n\n\t\tthis.renderer = renderer;\n\t\tthis.scene = new THREE.Scene();\n\t\tthis.camera = new THREE.OrthographicCamera( - 1.0, 1.0, 1.0, - 1.0 );\n\n\t\tthis.screen = new THREE.Mesh( customGeometry || new THREE.PlaneBufferGeometry( 2, 2 ) );\n\t\tthis.scene.add( this.screen );\n\n\t\tppParam.vertexShader = ppParam.vertexShader || passThrowVert;\n\t\tppParam.uniforms = ppParam.uniforms || {};\n\t\tppParam.uniforms.resolution = {\n\t\t\tvalue: new THREE.Vector2()\n\t\t};\n\n\t\tthis.effect = {\n\t\t\tmaterial: new THREE.ShaderMaterial( ppParam ),\n\t\t};\n\n\t}\n\n\tpublic render( inputRenderTargets: InputRenderTarget | null, renderTarget: THREE.WebGLRenderTarget | null = null ) {\n\n\t\tlet renderTargetMem = this.renderer.getRenderTarget();\n\n\t\tlet effect = this.effect;\n\t\tlet material = effect.material;\n\t\tlet uniforms = material.uniforms;\n\n\t\tif ( inputRenderTargets ) {\n\n\t\t\tlet keys = Object.keys( inputRenderTargets );\n\n\t\t\tfor ( let j = 0; j < keys.length; j ++ ) {\n\n\t\t\t\tif ( uniforms[ keys[ j ] ] ) {\n\n\t\t\t\t\tuniforms[ keys[ j ] ].value = inputRenderTargets[ keys[ j ] ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuniforms[ keys[ j ] ] = { value: inputRenderTargets[ keys[ j ] ] };\n\n\t\t\t\t\teffect.material.needsUpdate = true;\n\n\t\t\t\t\teffect.material.uniforms = uniforms;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( renderTarget ) {\n\n\t\t\tuniforms.resolution.value.set( renderTarget.width, renderTarget.height );\n\n\t\t} else {\n\n\t\t\tthis.renderer.getSize( uniforms.resolution.value );\n\n\t\t}\n\n\t\tthis.screen.material = material;\n\n\t\tthis.renderer.setRenderTarget( renderTarget );\n\n\t\tthis.renderer.render( this.scene, this.camera );\n\n\t\tthis.renderer.setRenderTarget( renderTargetMem );\n\n\t}\n\n}\n","import * as THREE from 'three';\n\nexport declare interface Transform {\n\tposition?: THREE.Vector3;\n\trotation?: THREE.Quaternion;\n\tscale?: number;\n}\n\nexport declare interface BaseTransform {\n\tposition: THREE.Vector3;\n\trotation: THREE.Quaternion;\n\tscale: THREE.Vector3\n}\n\nexport class LayoutController {\n\n\tprotected obj: THREE.Object3D;\n\tprotected baseTransform: BaseTransform;\n\tprotected transform: Transform;\n\n\tconstructor( object: THREE.Object3D, transform: Transform, isAbsolutePosition?: boolean ) {\n\n\t\tthis.obj = object;\n\n\t\tthis.baseTransform = {\n\t\t\tposition: this.obj.position.clone(),\n\t\t\trotation: this.obj.quaternion.clone(),\n\t\t\tscale: this.obj.scale.clone()\n\t\t};\n\n\t\tthis.transform = transform;\n\n\t\tif ( ! isAbsolutePosition ) {\n\n\t\t\tthis.transform.position && this.transform.position.add( this.obj.position );\n\t\t\tthis.transform.rotation && this.transform.rotation.multiply( this.obj.quaternion );\n\n\t\t}\n\n\t}\n\n\tpublic updateTransform( weight: number ) {\n\n\t\tif ( this.transform.position ) {\n\n\t\t\tthis.obj.position.copy( this.baseTransform.position.clone().lerp( this.transform.position, weight ) );\n\n\t\t}\n\n\t\tif ( this.transform.rotation ) {\n\n\t\t\tthis.obj.quaternion.copy( this.baseTransform.rotation.clone().slerp( this.transform.rotation, weight ) );\n\n\t\t}\n\n\t\tif ( this.transform.scale ) {\n\n\t\t\tthis.obj.scale.copy( this.baseTransform.scale.clone().multiplyScalar( this.transform.scale * ( weight ) + 1.0 - weight ) );\n\n\t\t}\n\n\t}\n\n}\n","import * as THREE from 'three';\r\n\r\nexport class WaitMan extends THREE.EventDispatcher {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t}\r\n\r\n\tpublic goHome() {\r\n\r\n\t\tthis.dispatchEvent( { type: 'gohome' } );\r\n\r\n\t}\r\n\r\n\tpublic wait( time: number ) {\r\n\r\n\t\treturn new Promise<void>( ( resolve, reject ) => {\r\n\r\n\t\t\tconst onGoHome = () => {\r\n\r\n\t\t\t\treject();\r\n\r\n\t\t\t\tthis.removeEventListener( 'gohome', onGoHome );\r\n\r\n\t\t\t};\r\n\r\n\t\t\tthis.addEventListener( 'gohome', onGoHome );\r\n\r\n\t\t\tsetTimeout( () => {\r\n\r\n\t\t\t\tthis.removeEventListener( 'gohome', onGoHome );\r\n\r\n\t\t\t\tresolve();\r\n\r\n\t\t\t}, time * 1000.0 );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n"],"names":["BaseLayer","THREE","param","deltaTime","object","length","geo","mat","wrapperElm","dispatchResize","newWindowSize","newCanvasSize","portraitWeight","wideWeight","canvasPointerPos","canvasRect","screenPosition","args","event","trackpadDelta","Pointer","userAgent","elm","onTouchStart","onTouchMove","onToucEnd","onPointerDown","onPointerMove","onPointerUp","onWheel","onUnRegister","e","windowSize","p","screen","rect","x","y","type","touch","pointerType","posX","posY","dispatch","Controller","parameter","pointerUpdate","pointerWheel","orientationchange","windowResize","i","layer","layerName","layerNmae","Bezier","calcBezierA","calcBezierB","calcBezierC","calcBezierSlope","t","calcBezier","subdiv","startT","endT","currentX","currentT","newton","slope","getBezierTfromX","cache","sample","diff","Easings","sigmoid","weight","e1","e2","smoothstep","min","max","value","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","bezier","c1","h1","h2","c2","cubicBezier","h1X","h1Y","h2X","h2Y","Lerps","number","b","numberArray","c","THREEVectors","THREEQuaternion","THREEEuler","ac","bc","getLerpFunc","Animator","params","variable","name","easing","goalValue","duration","callback","resolve","mute","uniforms","keys","r","variableName","time","lerpFunc","dataBaseValue","func","target","databaseValue","key","AnimationAction","EventEmitter","propertyName","fcurveGroup","curveKeys","minStart","maxEnd","curve","uniform","curveGroup","uni","frame","FCurve","frames","keyframe","index","beforeKeyFrame","FCurveGroup","z","w","scalar","axis","FCurveKeyFrame","coordinate","handleLeft","handleRight","interpolation","nextFrame","d","BlenderConnector","url","jsonPath","req","data","actionData","action","fcurveGroupNames","fcurveGroupName","fcurveData","objectData","msg","objectName","actionName","actions","accessor","curveName","current","start","end","UniformsLib","mergeUniforms","res","GPUComputationController","renderer","dataSize","a","texture","initTex_texParam","textureParam","isiOS","initTex","customParam","buf","initKernel","passThroughFrag","vert","kernel","camera","temp","currentRenderTarget","b1","b2","tmp","PostProcessing","ppParam","customGeometry","passThrowVert","inputRenderTargets","renderTarget","renderTargetMem","effect","material","j","LayoutController","transform","isAbsolutePosition","WaitMan","reject","onGoHome"],"mappings":";;AA6Ca,MAAAA,UAAkBC,EAAM,gBAAgB;AAAA,EAYpD,YAAaC,GAAoB;AAE1B,aANP,KAAO,OAAO,GAEd,KAAU,eAAe,IAMxB,KAAK,WAAW,IAAID,EAAM,cAAeC,CAAM,GAC/C,KAAK,SAAS,cAAeA,EAAM,cAAc,OAAO,gBAAiB,GACpE,KAAA,SAAS,MAAM,oBAAoB,IAExC,KAAK,OAAO;AAAA,MACX,QAAQ,KAAK,SAAS;AAAA,MACtB,eAAe;AAAA,QACd,YAAY,KAAK;AAAA,QACjB,YAAY,KAAK;AAAA,QACjB,gBAAgB,IAAI;AAAA,MACrB;AAAA,MACA,MAAM;AAAA,QACL,YAAY,IAAID,EAAM,QAAQ;AAAA,QAC9B,mBAAmB;AAAA,QACnB,YAAY,IAAIA,EAAM,QAAQ;AAAA,QAC9B,iBAAiB,IAAIA,EAAM,QAAQ;AAAA,QACnC,mBAAmB;AAAA,QACnB,YAAY,KAAK,SAAS,cAAc;AAAA,QACxC,gBAAgB;AAAA,QAChB,YAAY;AAAA,MACb;AAAA,MACA,GAAGC;AAAA,IAAA,GAGCA,EAAM,kBAEV,KAAK,kBAAmBA,EAAM,kBAAkB,MAAM,EAAM,GAI7D,KAAK,iBAAiB;AAAA,MACrB,MAAM;AAAA,QACL,OAAO;AAAA,MACR;AAAA,IAAA,GAGI,KAAA,QAAQ,IAAID,EAAM,MAAM,GAC7B,KAAK,SAAS,IAAIA,EAAM,kBAAmB,IAAI,GAAG,KAAK,GAAK;AAAA,EAE7D;AAAA,EAEO,KAAME,GAAoB;AAEhC,SAAK,QAAQA,GAER,KAAA,eAAe,KAAK,QAAQ,KAAK,MAEjC,KAAK,gBAET,KAAK,QAASA,CAAU;AAAA,EAI1B;AAAA,EAEO,QAASA,GAAoB;AAAA,EAAE;AAAA,EAE/B,SAAS;AAEf,eAAY,MAAM;AAEjB,WAAK,SAAS,GACd,KAAK,eAAe;AAAA,OAElB,CAAE;AAAA,EAEN;AAAA,EAEO,WAAW;AAEjB,SAAK,cAAe;AAAA,MACnB,MAAM;AAAA,IAAA,CACL,GAEG,KAAA,gBAAiB,KAAK,KAAM,GAEjC,KAAK,eAAe;AAAA,EAErB;AAAA,EAEU,gBAAiBC,GAAyB;AAE7C,UAAAC,IAASD,EAAO,SAAS;AAE/B,aAAU,IAAIC,IAAS,GAAG,KAAK,GAAG,KAAO;AAEnC,WAAA,gBAAiBD,EAAO,SAAU,EAAI;AAE3C,UAAIE,GACAC;AAEG,MAAAH,EAAO,SAAU,GAAoB,WAEnCE,IAAAF,EAAO,SAAU,GAAoB,UACnCG,IAAAH,EAAO,SAAU,GAAoB,WAIzCA,EAAA,OAAUA,EAAO,SAAU,EAAM,GAEnCE,KAEJA,EAAI,QAAQ,GAIRC,KAEJA,EAAI,QAAQ;AAAA,IAId;AAAA,EAED;AAAA,EAEO,kBAAmBC,GAAgCC,IAA0B,IAAO;AAE1F,SAAK,KAAK,iBAAiBD,GAC3B,KAAK,KAAK,qBAAqBA,IAAaA,EAAW,sBAA0B,IAAA,MAE5EC,KAEJ,KAAK,SAAS;AAAA,EAIhB;AAAA,EAEO,WAAW;AAEjB,QAAK,KAAK,YAAY;AAAO;AAEvB,UAAAC,IAAgB,IAAIT,EAAM,QAAS,SAAS,KAAK,aAAa,OAAO,WAAY,GACjFU,IAAgB,IAAIV,EAAM;AAE3B,IAAA,KAAK,KAAK,iBAEAU,EAAA,IAAK,KAAK,KAAK,eAAe,aAAa,KAAK,KAAK,eAAe,YAAa,IAI/FA,EAAc,KAAMD,CAAc;AAInC,QAAIE,IAAiB,KAAUD,EAAc,IAAIA,EAAc,IAAM,KAAK,KAAK,cAAc,mBAAqB,KAAK,KAAK,cAAc,aAAa,KAAK,KAAK,cAAc;AAC/K,IAAAC,IAAiB,KAAK,IAAK,GAAK,KAAK,IAAK,GAAKA,CAAe,CAAE;AAEhE,QAAIC,IAAa,KAAUF,EAAc,IAAIA,EAAc,IAAM,KAAK,KAAK,cAAc,eAAiB,KAAK,KAAK,cAAc,aAAa,KAAK,KAAK,cAAc;AACvK,IAAAE,IAAa,KAAK,IAAK,GAAK,KAAK,IAAK,GAAKA,CAAW,CAAE,GAExD,KAAK,KAAK,KAAK,WAAW,KAAMH,CAAc,GAC9C,KAAK,KAAK,KAAK,oBAAoBA,EAAc,IAAIA,EAAc,GACnE,KAAK,KAAK,KAAK,WAAW,KAAMC,CAAc,GAC9C,KAAK,KAAK,KAAK,gBAAgB,KAAMA,EAAc,MAAQ,EAAA,eAAgB,KAAK,SAAS,cAAc,CAAE,CAAE,GAC3G,KAAK,KAAK,KAAK,oBAAoBA,EAAc,IAAIA,EAAc,GAC9D,KAAA,KAAK,KAAK,iBAAiBC,GAC3B,KAAA,KAAK,KAAK,aAAaC,GAE5B,KAAK,SAAS,cAAe,KAAK,KAAK,KAAK,UAAW,GAClD,KAAA,SAAS,QAAS,KAAK,KAAK,KAAK,WAAW,GAAG,KAAK,KAAK,KAAK,WAAW,CAAE,GAChF,KAAK,OAAO,SAAS,KAAK,KAAK,KAAK,mBACpC,KAAK,OAAO,0BAEP,KAAK,KAAK,mBAEd,KAAK,KAAK,qBAAqB,KAAK,KAAK,eAAe;EAI1D;AAAA,EAEO,aAAc,GAAsB;AAEpC,UAAAC,IAAmB,IAAIb,EAAM;AAG9B,QAFYa,EAAA,KAAM,EAAE,QAAS,GAE7B,KAAK,KAAK,QAAS;AAEvB,YAAMC,IAAa,KAAK,KAAK,OAAO,sBAAsB;AACzC,MAAAD,EAAA,IAAK,IAAIb,EAAM,QAASc,EAAW,GAAGA,EAAW,CAAE,CAAE;AAAA,IAEvE;AAEM,UAAAC,IAAiBF,EAAiB;AACxC,IAAAE,EAAe,OAAQ,KAAK,KAAK,KAAK,UAAW,GAClCA,EAAA,IAAI,IAAMA,EAAe,GACxCA,EAAe,eAAgB,CAAI,EAAE,UAAW,CAAI;AAGpD,UAAMC,IAAuB;AAAA,MAC5B,OAAO,EAAE;AAAA,MACT,UAAUH,EAAiB,MAAM;AAAA,MACjC,OAAO,EAAE,MAAM,MAAM;AAAA,MACrB,gBAAgBE,EAAe,MAAM;AAAA,MACrC,gBAAgB,EAAE,SAAS,MAAM;AAAA,IAAA;AAG7B,IAAA,EAAE,oBAAoB,UAE1B,KAAK,QAASC,CAAK,IAER,EAAE,oBAAoB,UAEjC,KAAK,aAAcA,CAAK,IAEb,EAAE,oBAAoB,SAEjC,KAAK,YAAaA,CAAK,IAEZ,EAAE,oBAAoB,SAEjC,KAAK,WAAYA,CAAK;AAAA,EAIxB;AAAA,EAEO,aAAcA,GAAuB;AAAA,EAAE;AAAA,EAEvC,YAAaA,GAAuB;AAAA,EAAE;AAAA,EAEtC,WAAYA,GAAuB;AAAA,EAAE;AAAA,EAErC,QAASA,GAAuB;AAAA,EAAE;AAAA,EAElC,QAASC,GAAmBC,GAAwB;AAAA,EAAE;AAE9D;AChSa,MAAAC,UAAgBnB,EAAM,gBAAgB;AAAA,EAUlD,cAAc;AAEP,aAPP,KAAO,UAA8B,MAmPrC,KAAU,mBAAmB,GAC7B,KAAU,cAAc,IA3OvB,KAAK,WAAW,IAAIA,EAAM,QAAS,KAAK,GAAI,GAC5C,KAAK,QAAQ,IAAIA,EAAM,QAAS,KAAK,GAAI;AAEzC,UAAMoB,IAAY,UAAU;AAC5B,SAAK,OAAOA,EAAU,QAAS,QAAS,KAAK,KAAKA,EAAU,QAAS,MAAO,KAAK,KAAKA,EAAU,QAAS,SAAU,KAAK,KAAK,UAAU,YAAY,UAAY,UAAU,YAAY,cAAc,UAAU,UAAU,QAAS,QAAS,KAAK,MAAO,UAAU,UAAU,QAAS,QAAS,KAAK,MAAS,UAAmB,eAAe,QAEtU,KAAA,SAAS,IAAK,KAAK,GAAI,GAC5B,KAAK,aAAa;AAAA,EAEnB;AAAA,EAEO,gBAAiBC,GAAmB;AAE1C,SAAK,UAAUA;AAEf,UAAMC,IAAe,KAAK,QAAQ,KAAM,MAAM,OAAQ,GAChDC,IAAc,KAAK,QAAQ,KAAM,MAAM,MAAO,GAC9CC,IAAY,KAAK,QAAQ,KAAM,MAAM,KAAM,GAC3CC,IAAgB,KAAK,UAAU,KAAM,MAAM,OAAQ,GACnDC,IAAgB,KAAK,UAAU,KAAM,MAAM,MAAO,GAClDC,IAAc,KAAK,UAAU,KAAM,MAAM,KAAM,GAC/CC,IAAU,KAAK,MAAM,KAAM,IAAK;AAEtC,IAAAP,EAAI,iBAAkB,cAAcC,GAAc,EAAE,SAAS,IAAQ,GACrED,EAAI,iBAAkB,aAAaE,GAAa,EAAE,SAAS,IAAQ,GACnEF,EAAI,iBAAkB,YAAYG,GAAW,EAAE,SAAS,IAAQ,GAC5DH,EAAA,iBAAkB,eAAeI,CAAc,GAC/CJ,EAAA,iBAAkB,eAAeK,CAAc,GAC/CL,EAAA,iBAAkB,aAAaM,CAAY,GAC3CN,EAAA,iBAAkB,WAAWM,CAAY,GAC7CN,EAAI,iBAAkB,SAASO,GAAS,EAAE,SAAS,IAAQ;AAErD,UAAAC,IAAe,CAAEC,MAAY;AAElC,MAAKT,EAAI,YAAaS,EAAE,GAAI,MAEvBT,EAAA,oBAAqB,cAAcC,CAAa,GAChDD,EAAA,oBAAqB,aAAaE,CAAY,GAC9CF,EAAA,oBAAqB,YAAYG,CAAU,GAC3CH,EAAA,oBAAqB,eAAeI,CAAc,GAClDJ,EAAA,oBAAqB,eAAeK,CAAc,GAClDL,EAAA,oBAAqB,aAAaM,CAAY,GAC9CN,EAAA,oBAAqB,WAAWM,CAAY,GAC5CN,EAAA,oBAAqB,SAASO,CAAQ,GAErC,KAAA,oBAAqB,cAAcC,CAAa;AAAA,IAEtD;AAII,SAAA,iBAAkB,cAAcA,CAAa;AAAA,EAEnD;AAAA,EAEO,kBAAmBR,GAAmB;AAE5C,SAAK,cAAe;AAAA,MACnB,MAAM;AAAA,MACN,KAAAA;AAAA,IAAA,CACC;AAAA,EAEH;AAAA,EAEO,kBAAmBU,GAA4B;AAErD,QAAK,KAAK,SAAS,KAAK,KAAK,SAAS;AAAI,aAAO,IAAI/B,EAAM,QAAS,KAAK,GAAI;AAE7E,UAAMgC,IAAI,KAAK,SAAS,MACtB,EAAA,OAAQD,CAAW,EACnB,eAAgB,CAAI,EACpB,UAAW,CAAI;AACjB,WAAAC,EAAE,KAAK,IAEAA;AAAA,EAER;AAAA,EAEO,oBAAqBX,GAAkBY,GAAmB;AAE1D,UAAAC,IAAgBb,EAAI,eAAkB,EAAA;AAE5C,QAAIc,IAAI,KAAK,SAAS,IAAID,EAAK,MAC3BE,IAAI,KAAK,SAAS,IAAIF,EAAK;AAE/B,WAAKD,MAEJE,KAAKD,EAAK,OACVE,KAAKF,EAAK,SAID,IAAIlC,EAAM,QAASmC,GAAGC,CAAE;AAAA,EAInC;AAAA,EAEU,OAAQD,GAAWC,GAAY;AAGvC,IAAA,KAAK,SAAS,MAAM,KAAK,SAAS,KAClC,KAAK,SAAS,MAAM,KAAK,SAAS,IAG7B,KAAA,MAAM,IAAK,GAAG,CAAE,IAIhB,KAAA,MAAM,IAAKD,IAAI,KAAK,SAAS,GAAGC,IAAI,KAAK,SAAS,CAAE,GAIrD,KAAA,SAAS,IAAKD,GAAGC,CAAE;AAAA,EAEzB;AAAA,EAEU,QAASC,GAAcP,GAAgB;AAE1C,UAAAQ,IAAQR,EAAE,QAAS;AAEzB,IAAKQ,IAEJ,KAAK,kBAAmBA,EAAM,OAAOA,EAAM,OAAOD,GAAMP,CAAE,IAIrDO,KAAQ,SAEZ,KAAK,kBAAmB,KAAK,KAAKA,GAAMP,CAAE;AAAA,EAM7C;AAAA,EAEU,UAAWO,GAAcP,GAA8B;AAEhE,UAAMS,IAAgBT,EAAoB;AAE1C,IAAKS,KAAe,OAEdA,KAAe,YAAaT,EAAE,UAAU,MAAOA,EAAE,UAAU,MAE/D,KAAK,kBAAmBA,EAAE,OAAOA,EAAE,OAAOO,GAAMP,CAAkB,IAMnE,KAAK,kBAAmBA,EAAE,OAAOA,EAAE,OAAOO,GAAMP,CAAE;AAAA,EAIpD;AAAA,EAEU,kBAAmBU,GAAcC,GAAcJ,GAAcP,GAA2C;AAEjH,QAAIY,IAAW;AAET,UAAAP,IAAIK,IAAO,OAAO,aAClBJ,IAAIK,IAAO,OAAO;AAExB,IAAKJ,KAAQ,WAEZ,KAAK,aAAa,IAEb,KAAA,OAAQF,GAAGC,CAAE,GAEb,KAAA,MAAM,IAAK,GAAG,CAAE,GAEVM,IAAA,MAEAL,KAAQ,UAEd,KAAA,OAAQF,GAAGC,CAAE,GAEb,KAAK,eAEEM,IAAA,OAIDL,KAAQ,UAEd,mBAAmBP,IAElBA,EAAE,cAAc,UAAU,MAE9B,KAAK,aAAa,MAMnB,KAAK,aAAa,IAIRY,IAAA,KAIPA,KAEJ,KAAK,cAAe;AAAA,MACnB,MAAM;AAAA,MACN,cAAcZ;AAAA,MACd,kBAAkBO;AAAA,MAClB,UAAU,KAAK,SAAS,MAAM;AAAA,MAC9B,OAAO,KAAK,MAAM,MAAM;AAAA,IAAA,CACvB;AAAA,EAIJ;AAAA,EAEO,SAAS;AAEV,IAAE,KAAK,QAEX,KAAK,cAAe;AAAA,MACnB,MAAM;AAAA,MACN,cAAc;AAAA,MACd,kBAAkB;AAAA,MAClB,UAAU,KAAK,SAAS,MAAM;AAAA,MAC9B,OAAO,KAAK,MAAM,MAAM;AAAA,IAAA,CACvB;AAAA,EAIJ;AAAA,EAKU,MAAO,GAAgB;AAEhC,SAAK,cAAe;AAAA,MACnB,MAAM;AAAA,MACN,YAAY;AAAA,IAAA,CACX;AAAA,EAEH;AAED;ACtPa,MAAAM,UAAmB3C,EAAM,gBAAgB;AAAA,EAQrD,YAAa4C,GAA8B;AAEpC,aALP,KAAU,SAAsB,IAOtBA,KAAaA,EAAU,UAEvB,QAAA,IAAK,mBAAmB,yEAA0E,GAItG,KAAA,QAAQ,IAAI5C,EAAM,MAAM,GAMxB,KAAA,UAAU,IAAImB,KACnB,KAAK,uBAA0ByB,KAAaA,EAAU,uBAAyB,SAAS,IAAK;AAM7F,UAAMC,IAAgB,KAAK,aAAa,KAAM,IAAK,GAC7CC,IAAe,KAAK,QAAQ,KAAM,IAAK,GACvCC,IAAoB,KAAK,oBAAoB,KAAM,IAAK,GACxDC,IAAe,KAAK,eAAe,KAAM,IAAK;AAE/C,SAAA,QAAQ,iBAAkB,UAAUH,CAAc,GAClD,KAAA,QAAQ,iBAAkB,SAASC,CAAa,GAC9C,OAAA,iBAAkB,qBAAqBC,CAAkB,GACzD,OAAA,iBAAkB,UAAUC,CAAa,GAE3C,KAAA,iBAAkB,WAAW,MAAM;AAElC,WAAA,QAAQ,oBAAqB,UAAUH,CAAc,GACrD,KAAA,QAAQ,oBAAqB,SAASC,CAAa,GACjD,OAAA,oBAAqB,qBAAqBC,CAAkB,GAC5D,OAAA,oBAAqB,UAAUC,CAAa;AAAA,IAAA,CAElD,GAEF,KAAK,KAAK;AAAA,EAEX;AAAA,EAEU,OAAO;AAEV,UAAA9C,IAAY,KAAK,MAAM,SAAS;AAEtC,SAAK,QAAQ;AAEb,aAAU+C,IAAI,GAAGA,IAAI,KAAK,OAAO,QAAQA;AAEnC,WAAA,OAAQA,GAAI,KAAM/C,CAAU;AAIlC,0BAAuB,KAAK,KAAK,KAAM,IAAK,CAAE;AAAA,EAE/C;AAAA,EAEU,iBAAiB;AAE1B,aAAU+C,IAAI,GAAGA,IAAI,KAAK,OAAO,QAAQA;AAEnC,WAAA,OAAQA,GAAI,SAAS;AAAA,EAI5B;AAAA,EAEU,sBAAsB;AAE/B,SAAK,eAAe;AAAA,EAErB;AAAA,EAEU,aAAc,GAAiB;AAExC,aAAUA,IAAI,GAAGA,IAAI,KAAK,OAAO,QAAQA;AAEnC,WAAA,OAAQA,GAAI,aAAc,CAAiC;AAAA,EAIlE;AAAA,EAEU,QAAS,GAAiB;AAEnC,aAAUA,IAAI,GAAGA,IAAI,KAAK,OAAO,QAAQA;AAExC,WAAK,OAAQA,GAAI,QAAS,EAAE,YAAY,EAAE,aAAc;AAAA,EAI1D;AAAA,EAMO,SAAUC,GAAmB;AAE9B,SAAA,OAAO,KAAMA,CAAM,GAExBA,EAAM,OAAO;AAAA,EAEd;AAAA,EAEO,SAAUC,GAAoB;AAEpC,aAAUF,IAAI,GAAGA,IAAI,KAAK,OAAO,QAAQA;AAExC,UAAK,KAAK,OAAQA,GAAI,KAAK,QAAQE;AAAY,eAAO,KAAK,OAAQF;AAI7D,WAAA;AAAA,EAER;AAAA,EAEO,YAAaG,GAAoB;AAEvC,aAAUH,IAAI,KAAK,OAAO,SAAS,GAAGA,KAAK,GAAGA,KAAO;AAE9C,YAAAC,IAAQ,KAAK,OAAQD;AAEtB,MAAAC,EAAM,KAAK,QAAQE,MAEvBF,EAAM,SAAS,GAEV,KAAA,OAAO,OAAQD,GAAG,CAAE;AAAA,IAI3B;AAAA,EAED;AAAA,EAEO,uBAAwB5B,GAAmB;AAEjD,IAAK,KAAK,uBAEJ,KAAA,QAAQ,kBAAmB,KAAK,mBAAoB,GAIrD,KAAA,QAAQ,gBAAiBA,CAAI,GAElC,KAAK,sBAAsBA;AAAA,EAE5B;AAAA,EAEO,UAAU;AAIhB,IAFsB,KAAK,OAAO,IAAK,CAAS6B,MAAAA,EAAM,KAAK,IAAK,EAElD,QAAS,CAAaC,MAAA;AAEnC,WAAK,YAAaA,CAAU;AAAA,IAAA,CAE3B,GAEF,KAAK,OAAO,MAAM;AAAA,IAEjB,GAID,KAAK,cAAe,EAAE,MAAM,UAAY,CAAA;AAAA,EAEzC;AAED;ACjMiB,IAAAE;AAAA,CAAV,CAAUA,MAAV;AAWOA,EAAAA,EAAA,oBAAoB,GACpBA,EAAA,mBAAmB,MACnBA,EAAA,wBAAwB,MACxBA,EAAA,6BAA6B,IAC7BA,EAAA,2BAA2B,IAC3BA,EAAA,iCAAiC,IAAMA,EAAA;AAEpD,WAASC,EAAatB,GAAyB;AAEvC,WAAA,CAAEA,EAAE,KAAK,IAAMA,EAAE,KAAK,IAAMA,EAAE,KAAKA,EAAE;AAAA,EAE7C;AACA,WAASuB,EAAavB,GAAyB;AAE9C,WAAO,IAAMA,EAAE,KAAK,IAAMA,EAAE,KAAK,IAAMA,EAAE;AAAA,EAE1C;AACA,WAASwB,EAAaxB,GAAyB;AAE9C,WAAO,KAAQA,EAAE,KAAK,IAAMA,EAAE;AAAA,EAE/B;AAEgB,WAAAyB,EAAiBzB,GAAwB0B,GAAY;AAEpE,WAAO,IAAMJ,EAAatB,CAAE,IAAI0B,IAAIA,IAAI,IAAMH,EAAavB,CAAE,IAAI0B,IAAIF,EAAaxB,CAAE;AAAA,EAErF;AAJOqB,EAAAA,EAAS,kBAAAI;AAMA,WAAAE,EAAY3B,GAAwB0B,GAAY;AAE/D,aAAWJ,EAAatB,CAAE,IAAI0B,IAAIH,EAAavB,CAAE,KAAM0B,IAAIF,EAAaxB,CAAE,KAAM0B,IAAI1B,EAAE;AAAA,EAEvF;AAJOqB,EAAAA,EAAS,aAAAM;AAMhB,WAASC,EAAQzB,GAAW0B,GAAgBC,GAAc9B,GAAyB;AAElF,QAAI+B,IAAW,GACXC,IAAW;AAEf,aAAUf,IAAI,GAAGA,IAAII,EAAA,4BAA4BJ;AAErC,MAAAe,IAAAH,KAAWC,IAAOD,KAAW,GAC7BE,IAAAJ,EAAY3B,GAAGgC,CAAS,GAE9BD,IAAW5B,IAER2B,IAAAE,IAIEH,IAAAG;AAMJ,WAAAA;AAAA,EAER;AAES,WAAAC,EAAQ9B,GAAUH,GAAwB0B,GAAY;AAE9D,aAAUT,IAAI,GAAGA,IAAII,EAAA,mBAAmBJ,KAAO;AAExC,YAAAiB,IAAQT,EAAiBzB,GAAG0B,CAAE;AAEpC,UAAKQ,KAAS;AAEN,eAAAR;AAKR,MAAAA,MADmBC,EAAY3B,GAAG0B,CAAE,IAAMvB,KAC1B+B;AAAA,IAEjB;AAEO,WAAAR;AAAA,EAER;AAEgB,WAAAS,EAAiBnC,GAAwBG,GAAWiC,GAAkB;AAEnF,IAAApC,EAAA,KAAK,KAAK,IAAKA,EAAE,IAAI,KAAK,IAAKA,EAAE,IAAIA,EAAE,EAAG,CAAE,GAC5CA,EAAA,KAAK,KAAK,IAAKA,EAAE,IAAI,KAAK,IAAKA,EAAE,IAAIA,EAAE,EAAG,CAAE;AAE9C,QAAIqC,IAAS;AAEb,aAAUpB,IAAI,GAAGA,IAAImB,EAAM,WAE1BC,IAASpB,IAAI,GACR,EAAAd,IAAIiC,EAAOnB,MAHkBA;AAGlC;AAIK,UAAAS,IAAIW,KAAWhB,EAAA,2BAA2B,IAC1CiB,IAAOb,EAAiBzB,GAAG0B,CAAE,KAAM1B,EAAE,KAAKA,EAAE;AAElD,WAAKsC,KAAQ,IAELZ,IAEIY,IAAO,OAEXL,EAAQ9B,GAAGH,GAAG0B,CAAE,IAIhBE,EAAQzB,GAAGuB,GAAGA,IAAIL,EAAA,gCAAgCrB,CAAE;AAAA,EAK7D;AAhCOqB,EAAAA,EAAS,kBAAAc;AAAA,GA7FAd,MAAAA,IAAA,CAAA,EAAA;ACDA,IAAAkB;AAAA,CAAV,CAAUA,MAAV;AAEU,WAAAC,EAASC,IAAiB,GAAgB;AAEzD,WAAO,CAAEtC,MAAe;AAEvB,UAAIuC,IAAK,KAAK,IAAK,CAAED,KAAW,IAAItC,IAAI,EAAI,GACxCwC,IAAK,KAAK,IAAK,CAAEF,CAAO;AAEnB,cAAA,KAAM,IAAIC,MAAS,IAAIA,MAAS,IAAIC,MAAS,IAAIA,MAAS;AAAA,IAAA;AAAA,EAIrE;AAXOJ,EAAAA,EAAS,UAAAC;AAaA,WAAAI,EAAYC,GAAaC,GAAaC,GAAwB;AAEvE,UAAA5C,IAAI,KAAK,IAAK,GAAG,KAAK,IAAK,IAAK4C,IAAQF,MAAUC,IAAMD,EAAM,CAAE;AAC/D,WAAA1C,IAAIA,KAAM,IAAI,IAAIA;AAAA,EAE1B;AALOoC,EAAAA,EAAS,aAAAK;AAWT,WAASI,EAAQtB,GAAY;AAE5B,WAAAA;AAAA,EAER;AAJOa,EAAAA,EAAS,SAAAS;AAMT,WAASC,EAAYvB,GAAY;AAEvC,WAAOA,IAAIA;AAAA,EAEZ;AAJOa,EAAAA,EAAS,aAAAU;AAMT,WAASC,EAAaxB,GAAY;AAExC,WAAOA,KAAM,IAAIA;AAAA,EAElB;AAJOa,EAAAA,EAAS,cAAAW;AAMT,WAASC,EAAezB,GAAY;AAEnC,WAAAA,IAAI,MAAK,IAAIA,IAAIA,IAAI,MAAQ,IAAI,IAAIA,KAAMA;AAAA,EAEnD;AAJOa,EAAAA,EAAS,gBAAAY;AAMT,WAASC,EAAa1B,GAAY;AAExC,WAAOA,IAAIA,IAAIA;AAAA,EAEhB;AAJOa,EAAAA,EAAS,cAAAa;AAMT,WAASC,EAAc3B,GAAY;AAEhC,WAAA,EAAGA,IAAMA,IAAIA,IAAI;AAAA,EAE3B;AAJOa,EAAAA,EAAS,eAAAc;AAMT,WAASC,EAAgB5B,GAAY;AAE3C,WAAOA,IAAI,MAAK,IAAIA,IAAIA,IAAIA,KAAMA,IAAI,MAAQ,IAAIA,IAAI,MAAQ,IAAIA,IAAI,KAAM;AAAA,EAE7E;AAJOa,EAAAA,EAAS,iBAAAe;AAMT,WAASC,EAAa7B,GAAY;AAEjC,WAAAA,IAAIA,IAAIA,IAAIA;AAAA,EAEpB;AAJOa,EAAAA,EAAS,cAAAgB;AAMT,WAASC,EAAc9B,GAAY;AAEzC,WAAO,IAAM,EAAGA,IAAMA,IAAIA,IAAIA;AAAA,EAE/B;AAJOa,EAAAA,EAAS,eAAAiB;AAMT,WAASC,EAAgB/B,GAAY;AAE3C,WAAOA,IAAI,MAAK,IAAIA,IAAIA,IAAIA,IAAIA,IAAI,IAAI,IAAM,EAAGA,IAAMA,IAAIA,IAAIA;AAAA,EAEhE;AAJOa,EAAAA,EAAS,iBAAAkB;AAMT,WAASC,EAAahC,GAAY;AAEjC,WAAAA,IAAIA,IAAIA,IAAIA,IAAIA;AAAA,EAExB;AAJOa,EAAAA,EAAS,cAAAmB;AAMT,WAASC,EAAcjC,GAAY;AAEzC,WAAO,IAAM,EAAGA,IAAMA,IAAIA,IAAIA,IAAIA;AAAA,EAEnC;AAJOa,EAAAA,EAAS,eAAAoB;AAMP,WAASC,EAAgBlC,GAAY;AAE3C,WAAOA,IAAI,MAAK,KAAKA,IAAIA,IAAIA,IAAIA,IAAIA,IAAI,IAAI,KAAO,EAAGA,IAAMA,IAAIA,IAAIA,IAAIA;AAAA,EAE1E;AAJOa,EAAAA,EAAS,iBAAAqB;AAMX,WAASC,EAAQC,GAAgBC,GAAgBC,GAAgBC,GAA6B;AAIpG,aAFI7B,IAAQ,IAAI,MAAOf,EAAO,wBAAyB,GAE7CJ,IAAI,GAAGA,IAAII,EAAO,0BAA0B,EAAGJ;AAEjD,MAAAmB,EAAAnB,KAAMI,EAAO,WAAY,EAAE,IAAIyC,EAAG,GAAG,IAAIC,EAAG,GAAG,IAAIC,EAAG,GAAG,IAAIC,EAAG,EAAA,GAAKhD,KAAMI,EAAO,2BAA2B,EAAM;AAI3H,WAAO,CAAElB,MAEHA,KAAK2D,EAAG,IAAWA,EAAG,IACtBG,EAAG,KAAK9D,IAAW8D,EAAG,IAEpB5C,EAAO,WAAY,EAAE,IAAIyC,EAAG,GAAG,IAAIC,EAAG,GAAG,IAAIC,EAAG,GAAG,IAAIC,EAAG,KAAK5C,EAAO,gBAAiB,EAAE,IAAIyC,EAAG,GAAG,IAAIC,EAAG,GAAG,IAAIC,EAAG,GAAG,IAAIC,EAAG,EAAK,GAAA9D,GAAGiC,CAAM,CAAE;AAAA,EAIvJ;AAnBOG,EAAAA,EAAS,SAAAsB;AAqBT,WAASK,EAAaC,GAAaC,GAAaC,GAAaC,GAAc;AAE1E,WAAAT;AAAA,MACN,EAAE,GAAG,GAAK,GAAG,EAAI;AAAA,MACjB,EAAE,GAAGM,GAAe,GAAGC,EAAc;AAAA,MACrC,EAAE,GAAGC,GAAe,GAAGC,EAAc;AAAA,MACrC,EAAE,GAAG,GAAK,GAAG,EAAI;AAAA,IAAA;AAAA,EAGnB;AATO/B,EAAAA,EAAS,cAAA2B;AAAA,GA7HA3B,MAAAA,IAAA,CAAA,EAAA;ACEA,IAAAgC;AAAA,CAAV,CAAUA,MAAV;AAEU,WAAAC,EAAQ,GAAWC,GAAW/C,GAAY;AAElD,WAAA,KAAM+C,IAAI,KAAM/C;AAAA,EAExB;AAJO6C,EAAAA,EAAS,SAAAC;AAMA,WAAAE,EAAa,GAAaD,GAAa/C,GAAY;AAE7D,QAAA,EAAE,UAAU+C,EAAE,QAAS;AAE3B,YAAME,IAAI,CAAA;AAEV,eAAU1D,IAAI,GAAGA,IAAI,EAAE,QAAQA;AAE9B,QAAA0D,EAAE,KAAM,EAAG1D,MAAQwD,EAAGxD,KAAM,EAAGA,MAAQS,CAAE;AAInC,aAAAiD;AAAA,IAAA;AAIP,qBAAQ,IAAK,4BAA6B,GAEnC;AAAA,EAIT;AAtBOJ,EAAAA,EAAS,cAAAG;AAwBA,WAAAE,EAAc,GAAgEH,GAAgE/C,GAAY;AAEzK,WAAO,EAAE,MAAQ,EAAA,KAAM+C,GAAG/C,CAAE;AAAA,EAE7B;AAJO6C,EAAAA,EAAS,eAAAK;AAMA,WAAAC,EAAiB,GAAqBJ,GAAqB/C,GAAY;AAEtF,WAAO,EAAE,MAAQ,EAAA,MAAO+C,GAAG/C,CAAE;AAAA,EAE9B;AAJO6C,EAAAA,EAAS,kBAAAM;AAMA,WAAAC,EAAY,GAAgBL,GAAgB/C,GAAY;AAEjE,UAAAqD,IAAK,EAAE,SACPC,IAAKP,EAAE;AAEb,WAAAM,EAAG,IAAIA,EAAG,KAAMC,EAAG,IAAID,EAAG,KAAMrD,GAChCqD,EAAG,IAAIA,EAAG,KAAMC,EAAG,IAAID,EAAG,KAAMrD,GAChCqD,EAAG,IAAIA,EAAG,KAAMC,EAAG,IAAID,EAAG,KAAMrD,GAEzBqD;AAAA,EAER;AAXOR,EAAAA,EAAS,aAAAO;AAaT,WAASG,EAAalC,GAA8B;AAErD,QAAA,OAASA,KAAW;AAExB,aAAOwB,EAAM;AAEd,QAAYxB,aAAiB;AAE5B,aAAOwB,EAAM;AAEd,QAAY,eAAexB,KAAS,eAAeA,KAAS,eAAeA,KAAS,aAAaA;AAEhG,aAAOwB,EAAM;AAEd,QAAY,kBAAkBxB;AAE7B,aAAOwB,EAAM;AAEd,QAAY,aAAaxB;AAExB,aAAOwB,EAAM;AAAA,EAIf;AAxBOA,EAAAA,EAAS,cAAAU;AAAA,GAzDAV,MAAAA,IAAA,CAAA,EAAA;ACsBJ,MAAAW,UAAiBlH,EAAM,gBAAgB;AAAA,EASnD,cAAc;AAEP,aARP,KAAO,cAAuB,IAG9B,KAAU,iBAAyB,GACnC,KAAU,iBAA6B,IAMtC,KAAK,YAAY,IACjB,KAAK,WAAW;EAEjB;AAAA,EAEO,IAAqCmH,GAAoC;AAE/E,UAAMC,IAAgC;AAAA,MACrC,MAAM;AAAA,MACN,OAAO,KAAK,cAAeD,EAAO,SAAU;AAAA,MAC5C,YAAY,KAAK,cAAeA,EAAO,SAAU;AAAA,MACjD,WAAW,KAAK,cAAeA,EAAO,SAAU;AAAA,MAChD,QAAQA,EAAO,UAAU5C,EAAQ,QAAQ;AAAA,MACzC,UAAY4C,EAAO,kBAAkBZ,EAAM,YAAaY,EAAO,SAAU;AAAA,MACzE,UAAUA,EAAO;AAAA,IAAA;AAGb,gBAAA,SAAUA,EAAO,QAASC,EAAS,OACnC,KAAA,UAAWD,EAAO,QAASC,GAEhC,KAAK,cAAe;AAAA,MACnB,MAAM;AAAA,MACN,SAASD,EAAO;AAAA,MAChB,UAAAC;AAAA,IAAA,CACC,GAEKA;AAAA,EAER;AAAA,EAMO,UAAWC,GAAcC,GAAqB;AAE9C,UAAAF,IAAW,KAAK,UAAWC;AAEjC,IAAKD,IAEJA,EAAS,SAASE,IAIV,QAAA,KAAM,MAAMD,IAAO,gBAAsB;AAAA,EAInD;AAAA,EAEO,SAA0CA,GAActC,GAAW;AAErE,QAAAqC,IAAW,KAAK,SAAUC;AAE9B,QAAKD,MAAa;AAEZ,MAAA,OAAOA,KAAY,WAEvB,KAAK,SAAUC,KAAStC,IAEb,UAAUqC,IAErBA,EAAS,KAAMrC,CAAa,IAEjBqC,aAAoB,UAE7BA,IAA4BrC,EAAoB,WAInD,KAAK,eAAgBsC,CAAK,GAC1B,KAAK,cAAeA,CAAK;AAAA;AAIjB,qBAAA,KAAM,MAAMA,IAAO,gBAAsB,GAE1C;AAAA,EAIT;AAAA,EAMO,QAAyCA,GAAcE,GAAcC,IAAmB,GAAGC,GAAqBH,GAAsB;AAEtI,UAAAF,IAAW,KAAK,UAAWC;AAsD1B,WArDS,IAAI,QAAS,CAAWK,MAAA;AAEvC,UAAKN,GAAW;AAEf,YAAKI,KAAY,GAAI;AAEf,eAAA,SAAUH,GAAME,CAAU,GAE/BH,EAAS,OAAO,GAChBA,EAAS,sBAAsB,MAAM;AAEpC,YAAAK,KAAYA,EAAS,GACrBC,EAAS,IAAK;AAAA,UAAA;AAIf;AAAA,QAED;AAEK,QAAAN,EAAS,QAAQ,OAErB,KAAK,cAAc,IACd,KAAA,mBAINA,EAAS,OAAO,GAChBA,EAAS,WAAWI,GACpBJ,EAAS,aAAa,KAAK,cAAeA,EAAS,KAAM,GAChDA,EAAA,YAAY,KAAK,cAAeG,CAAU,GAEnDH,EAAS,sBAAsB,MAAM;AAEpC,UAAAK,KAAYA,EAAS,GACrBC,EAAS,IAAK;AAAA,QAAA,GAIVJ,KAEC,KAAA,UAAWD,GAAMC,CAAO;AAAA,MAE9B;AAIQ,gBAAA,KAAM,MAAMD,IAAO,gBAAsB;AAAA,IAElD,CAEC;AAAA,EAIH;AAAA,EAEO,cAAeA,GAAe;AAE9B,UAAAD,IAAW,KAAK,UAAWC;AAEjC,IAAKD,KAEJA,EAAS,OAAO,GAChBA,EAAS,sBAAsB,QAIvB,QAAA,KAAM,MAAMC,IAAO,gBAAsB;AAAA,EAInD;AAAA,EAMO,IAAqCA,GAAyB;AAE/D,WAAA,KAAK,UAAWA,KAEb,KAAK,UAAWA,GAAO,SAItB,QAAA,KAAM,MAAMA,IAAO,gBAAsB,GAE1C;AAAA,EAIT;AAAA,EAEO,kBAAmDA,GAAcM,IAAgB,IAAoC;AAEtH,WAAA,KAAK,UAAWN,KAEb,KAAK,UAAWA,MAIhBM,KAEE,QAAA,KAAM,MAAMN,IAAO,gBAAsB,GAI3C;AAAA,EAIT;AAAA,EAMO,gBAAiBO,GAAqB;AAE5C,UAAMC,IAAO,OAAO,KAAM,KAAK,SAAU;AAEzC,aAAU,IAAI,GAAG,IAAIA,EAAK,QAAQ,KAAO;AAExC,YAAMT,IAAW,KAAK,kBAAmBS,EAAM,EAAI;AAEnD,MAAKT,MAEJQ,EAAUC,EAAM,MAAQT;AAAA,IAI1B;AAAA,EAED;AAAA,EAEO,oBAAqBC,GAAcM,IAAgB,IAAQ;AAE5D,WAAA,KAAK,UAAWN,KAEP,KAAK,UAAWA,GAAO,QAErB,MAIRM,KAEE,QAAA,KAAM,MAAMN,IAAO,gBAAsB,GAI3C;AAAA,EAIT;AAAA,EAMQ,cAA+CtC,GAAc;AAE/D,WAAA,OAAOA,KAAS,WAEbA,IAEI,WAAWA,IAEfA,EAAM,UAEFA,aAAiB,QAErBA,EAAM,WAIPA;AAAA,EAER;AAAA,EAEO,KAAMrB,GAAY;AAYjB,WAVK,IAAI,QAAe,CAAEoE,MAAM;AAEtC,iBAAY,MAAM;AAEf,QAAAA;MAAA,GAEEpE,IAAI,GAAO;AAAA,IAAA,CAEf;AAAA,EAIH;AAAA,EAMO,OAAQxD,GAAqB;AAE9B,IAAA,KAAK,kBAAkB,MAE3B,KAAK,cAAc;AAIpB,UAAM2H,IAAO,OAAO,KAAM,KAAK,SAAU;AAEzC,aAAU,IAAI,GAAG,IAAIA,EAAK,QAAQ,KAAO;AAExC,YAAME,IAAeF,EAAM,IACrBT,IAAW,KAAK,UAAWW;AACjC,UAAIC,IAAOZ,EAAS;AAef,UAbAY,KAAQ,MAEP,KAAA,kBACEA,IAAA,IAEFZ,EAAS,uBAER,KAAA,eAAe,KAAMA,EAAS,mBAAoB,IAMpDY,KAAQ,KAAOA,IAAO,GAAM;AAEhC,cAAMR,IAAWJ,EAAS,UACpBE,IAASF,EAAS,QAClBa,IAAWb,EAAS;AAE1B,QAAKI,MAEJQ,MAAU9H,KAAa,SAAUsH,IAE5BA,KAAY,KAAKQ,KAAQ,OAEtBA,IAAA;AAMT,YAAIjD,IAA8BqC,EAAS;AAE3C,QAAKY,IAAO,KAENC,MAEJlD,IAAQkD,EAAUb,EAAS,YAAYA,EAAS,WAAWE,EAAQU,CAAK,CAAE;AAMtE,cAAAE,IAAgB,KAAK,SAAUH;AAErC,QAAK,OAAOG,KAAiB,YAAY,EAAI,UAAUA,KAEtD,KAAK,SAAUH,KAAiBhD,IAErB,UAAUmD,KAErBA,EAAc,KAAMnD,CAAa,GAKlC,KAAK,cAAe;AAAA,UACnB,MAAM,YAAY8C,EAAM;AAAA,UACxB,WAAA3H;AAAA,UACA,OAAOkH,EAAS;AAAA,QAAA,CACf;AAAA,MAEH;AAEA,MAAAA,EAAS,OAAOY;AAAA,IAEjB;AAEQ,WAAA,KAAK,eAAe,UAAU,KAAI;AAEnC,YAAAG,IAAO,KAAK,eAAe,IAAI;AAErC,MAAKA,KAECA;IAIP;AAEA,SAAK,eAAe,GAEpB,KAAK,cAAe;AAAA,MACnB,MAAM;AAAA,MACN,WAAAjI;AAAA,IAAA,CACC,GAEG,KAAK,eAET,KAAK,cAAe;AAAA,MACnB,MAAM;AAAA,MACN,WAAAA;AAAA,IAAA,CACC;AAAA,EAIJ;AAAA,EAEO,eAAgBkI,GAAkB;AAExC,QAAKA,GAAS;AAEP,YAAAhB,IAAW,KAAK,UAAWgB,IAC3BC,IAAgB,KAAK,SAAUD;AAEhC,MAAAhB,KAAYiB,MAAkB,WAE7B,OAAOjB,EAAS,SAAS,YAAY,EAAI,UAAUA,EAAS,YAEhEA,EAAS,QAAQiB;AAMnB;AAAA,IAED;AAEA,UAAMC,IAAM,OAAO,KAAM,KAAK,QAAS;AAEvC,aAAU,IAAI,GAAG,IAAIA,EAAI,QAAQ,KAAO;AAEjC,YAAAlB,IAAW,KAAK,UAAWkB,EAAK,KAChCD,IAAgB,KAAK,SAAUC,EAAK;AAErC,MAAAlB,KAAYiB,MAAkB,WAI7B,OAAOjB,EAAS,SAAS,YAAY,EAAI,UAAUA,EAAS,YAEhEA,EAAS,QAAQiB;AAAA,IAOpB;AAAA,EAGD;AAED;ACleO,MAAME,UAAwBC,EAAa;AAAA,EAQjD,YAAanB,GAAgB;AAEtB,aAPP,KAAO,SAAqC,IAS3C,KAAK,OAAOA,KAAQ,IACpB,KAAK,WAAW,IAEhB,KAAK,QAAQ;AAAA,MACZ,OAAO;AAAA,MACP,KAAK;AAAA,MACL,UAAU;AAAA,IAAA;AAAA,EAGZ;AAAA,EAEO,eAAgBoB,GAAsBC,GAA2B;AAEvE,SAAK,OAAQD,KAAiBC,GAE9B,KAAK,UAAU;AAAA,EAEhB;AAAA,EAEO,aAAcD,GAAuB;AAE3C,WAAO,KAAK,OAAQA,IAEpB,KAAK,UAAU;AAAA,EAEhB;AAAA,EAEQ,YAAY;AAEnB,QAAIE,IAAY,OAAO,KAAM,KAAK,MAAO,GAErCC,IAAW,OACXC,IAAS;AAEb,aAAU5F,IAAI,GAAGA,IAAI0F,EAAU,QAAQ1F,KAAM;AAExC,UAAA6F,IAAS,KAAK,OAASH,EAAW1F;AAElC,MAAA6F,EAAM,aAAaF,MAEtBA,IAAWE,EAAM,aAIdA,EAAM,WAAWD,MAEpBA,IAASC,EAAM;AAAA,IAIjB;AAEI,KAAAF,KAAY,UAAaC,KAAU,WAE3BD,IAAA,GACFC,IAAA,IAIV,KAAK,MAAM,QAAQD,GACnB,KAAK,MAAM,MAAMC,GACjB,KAAK,MAAM,WAAW,KAAK,MAAM,MAAM,KAAK,MAAM;AAAA,EAEnD;AAAA,EAEO,eAAgBJ,GAA2C;AAE1D,WAAA,KAAK,OAAQA,MAAkB;AAAA,EAEvC;AAAA,EAMO,eAAgBA,GAAsBM,GAA0B;AAEtE,SAAK,SAAUN,KAAiBM;AAAA,EAEjC;AAAA,EAEO,YAA+EN,GAAiD;AAEjI,QAAA,KAAK,SAAUA;AAEnB,aAAO,KAAK,SAAUA;AAInB,QAAAO,IAAa,KAAK,eAAeP,CAAY;AAEjD,QAAIO,GAAa;AAEhB,UAAIC,IAAM;AAAA,QACT,OAAOD,EAAW,gBAAgB;AAAA,MAAA;AAGnC,kBAAK,SAAUP,KAAiBQ,GAEzBA;AAAA,IAER;AAEO,WAAA;AAAA,EAER;AAAA,EAMO,SAAUR,GAAsBL,GAAoJ;AAEtL,QAAAW,IAAU,KAAK,YAAYN,CAAY;AAE3C,QAAI,CAACM;AAAU,aAAOX,KAAU;AAEhC,QAAIrD,IAAQgE,EAAQ;AAEpB,WAAKX,IAED,OAAOrD,KAAS,YAEnBqD,EAAO,IAAIrD,GAEJqD,MAIRA,EAAO,IAAIrD,EAAM,GACjBqD,EAAO,IAAIrD,EAAM,GAEb,OAAOqD,KAAU,OAAOrD,MAE3BqD,EAAO,IAAIrD,EAAM,IAId,OAAOqD,KAAU,OAAOrD,MAE3BqD,EAAO,IAAIrD,EAAM,IAIXqD,KAAU,QAzBIrD;AAAA,EA2BtB;AAAA,EAMO,WAAY0D,GAAsBS,GAAed,GAAoJ;AAEvM,QAAAU,IAAQ,KAAK,eAAgBL,CAAa;AAE9C,WAAIL,IAEEU,IAEEA,EAAM,SAAUI,KAAS,GAAGd,CAAO,IAFtBA,IAMfU,IAEEA,EAAM,SAAUI,CAAM,IAFT;AAAA,EAMtB;AAAA,EAMO,YAAaA,GAAgB;AAEnC,QAAIP,IAAY,OAAO,KAAM,KAAK,MAAO;AAEzC,aAAU,IAAI,GAAG,IAAIA,EAAU,QAAQ,KAAO;AAEzC,UAAAD,IAAc,KAAK,OAAQC,EAAW,KACtCM,IAAM,KAAK,YAAaN,EAAW,EAAI;AAE3C,MAAI,CAACM,MAED,OAAOA,EAAI,SAAS,WAEvBA,EAAI,QAAQP,EAAY,SAASQ,CAAK,KAAK,IAI/BR,EAAA,SAASQ,GAAOD,EAAI,KAAK;AAAA,IAIvC;AAEA,SAAK,UAAU,UAAU,CAAC,IAAI,CAAE;AAAA,EAEjC;AAED;AC7NO,MAAME,UAAeX,EAAa;AAAA,EAUxC,YAAaY,GAA4B;AAElC,aAVP,KAAO,YAA8B,IAErC,KAAQ,QAA0C,EAAE,OAAO,KAAK,OAAO,OAUtE,KAAK,aAAa,GAClB,KAAK,WAAW,GAChB,KAAK,gBAAgB,GAErB,KAAK,IAAKA,CAAO;AAAA,EAElB;AAAA,EAEO,IAAKA,GAA4B;AAEvC,IAAKA,MAEJ,KAAK,UAAU,SAAS,GAExBA,EAAO,QAAS,CAAYC,MAAA;AAE3B,WAAK,YAAaA,CAAS;AAAA,IAAA,CAE1B;AAAA,EAIJ;AAAA,EAEO,YAAaA,GAA2B;AAE9C,QAAIC,IAAQ;AAEZ,aAAU,IAAI,GAAG,IAAI,KAAK,UAAU,UAEvB,KAAK,UAAW,GAEjB,WAAW,IAAID,EAAS,WAAW,GAJH;AAM1C,MAAAC;AAUF,SAAK,UAAU,OAAQA,GAAO,GAAGD,CAAS,GAI1C,KAAK,aAAa,KAAK,UAAU,GAAG,WAAW,GAC/C,KAAK,WAAW,KAAK,UAAU,KAAK,UAAU,SAAS,GAAG,WAAW;AAAA,EAEtE;AAAA,EAEO,SAAUH,GAAgB;AAE3B,QAAAA,KAAS,KAAK,MAAM;AAExB,aAAO,KAAK,MAAM;AAInB,QAAInE,IAAuB;AAE3B,aAAU,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAO;AAE9C,UAAAsE,IAAW,KAAK,UAAW;AAE1B,UAAAH,KAASG,EAAS,WAAW,GAAI;AAEjC,YAAAE,IAAiB,KAAK,UAAW,IAAI;AAEzC,QAAKA,IAEIxE,IAAAwE,EAAe,GAAIF,GAAUH,CAAM,IAI3CnE,IAAQsE,EAAS,WAAW;AAI7B;AAAA,MAED;AAAA,IAED;AAQA,WANKtE,MAAU,QAAQ,KAAK,UAAU,SAAS,MAE9CA,IAAQ,KAAK,UAAW,KAAK,UAAU,SAAS,GAAI,WAAW,IAI3DA,MAAU,QAEd,KAAK,QAAQ;AAAA,MACZ,OAAAmE;AAAA,MACA,OAAAnE;AAAA,IAAA,GAGMA,KAID;AAAA,EAER;AAED;ACzHO,MAAMyE,UAAoBhB,EAAa;AAAA,EAU7C,YAAanB,GAAelF,GAAYC,GAAYqH,GAAYC,GAAYC,GAAkB;AAEvF,aARP,KAAO,OAAwB,UAU9B,KAAK,OAAOtC,KAAQ,IAEpB,KAAK,aAAa,GAClB,KAAK,WAAW,GAChB,KAAK,gBAAgB,GAErB,KAAK,QAAQ;AAAA,MACZ,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,QAAQ;AAAA,IAAA,GAGLlF,KAEE,KAAA,UAAWA,GAAG,GAAI,GAIpBC,KAEE,KAAA,UAAWA,GAAG,GAAI,GAIpBqH,KAEE,KAAA,UAAWA,GAAG,GAAI,GAIpBC,KAEE,KAAA,UAAWA,GAAG,GAAI;AAAA,EAIzB;AAAA,EAEO,UAAWZ,GAAec,GAAmB;AAEnD,SAAK,MAAOA,KAASd,GAErB,KAAK,SAAS,GACd,KAAK,UAAU;AAAA,EAEhB;AAAA,EAEO,WAAW;AAEZ,IAAA,KAAK,MAAM,WAEf,KAAK,OAAO,WAIR,KAAK,MAAM,IAEf,KAAK,OAAO,SAED,KAAK,MAAM,IAEtB,KAAK,OAAO,SAED,KAAK,MAAM,IAEtB,KAAK,OAAO,SAED,KAAK,MAAM,MAEtB,KAAK,OAAO;AAAA,EAId;AAAA,EAEQ,YAAY;AAEnB,QAAIH,IAAY,OAAO,KAAM,KAAK,KAAM,GAEpCC,IAAW,OACXC,IAAS;AAEb,aAAU5F,IAAI,GAAGA,IAAI0F,EAAU,QAAQ1F,KAAM;AAExC,UAAA6F,IAAS,KAAK,MAAmCH,EAAW1F;AAEhE,MAAI,CAAC6F,MAEDA,EAAM,aAAaF,MAEtBA,IAAWE,EAAM,aAIdA,EAAM,WAAWD,MAEpBA,IAASC,EAAM;AAAA,IAIjB;AAEI,KAAAF,KAAY,UAAaC,KAAU,WAE3BD,IAAA,GACFC,IAAA,IAIV,KAAK,aAAaD,GAClB,KAAK,WAAWC,GACX,KAAA,gBAAgB,KAAK,WAAW,KAAK;AAAA,EAE3C;AAAA,EAEO,kBAAkB;AAEnB,WAAA,KAAK,QAAQ,SAEV,IAAI7I,EAAM,YAEN,KAAK,QAAQ,SAEjB,IAAIA,EAAM,YAEN,KAAK,QAAQ,SAEjB,IAAIA,EAAM,YAIX;AAAA,EAER;AAAA,EAMO,SAAiFkJ,GAAed,GAA+B;AAErI,WAAIA,KAEE,KAAK,MAAM,MAEfA,EAAO,IAAI,KAAK,MAAM,EAAE,SAAUc,CAAM,IAIpC,KAAK,MAAM,MAEfd,EAAO,IAAI,KAAK,MAAM,EAAE,SAAUc,CAAM,IAIpC,KAAK,MAAM,KAAK,OAAOd,MAE3BA,EAAO,IAAI,KAAK,MAAM,EAAE,SAAUc,CAAM,IAIpC,KAAK,MAAM,KAAM,OAAOd,MAE5BA,EAAO,IAAI,KAAK,MAAM,EAAE,SAAUc,CAAM,IAIlCd,KAIF,KAAK,MAAM,SAEP,KAAK,MAAM,OAAO,SAAUc,CAAM,IAIpC;AAAA,EAIT;AAGD;ACxMO,MAAMW,UAAuBrB,EAAa;AAAA,EAUhD,YAAasB,GAAwBC,GAAyBC,GAA0BC,GAAsC;AAEvH,aAVP,KAAO,aAAyB,EAAE,GAAG,GAAG,GAAG,KAC3C,KAAO,aAAyB,EAAE,GAAG,GAAG,GAAG,KAC3C,KAAO,cAA0B,EAAE,GAAG,GAAG,GAAG,KAC5C,KAAO,gBAAqC,UAE5C,KAAQ,SAA4B,MACpC,KAAQ,YAAmC,MAM1C,KAAK,IAAKH,GAAYC,GAAYC,GAAaC,CAAc;AAAA,EAE9D;AAAA,EAEO,IAAKH,GAAwBC,GAAyBC,GAA0BC,GAAsC;AAE5H,SAAK,aAAaH,GAClB,KAAK,aAAaC,KAAcD,GAChC,KAAK,cAAcE,KAAeF,GAClC,KAAK,gBAAgBG,KAAiB;AAAA,EAEvC;AAAA,EAEQ,UAAWA,GAAoCC,GAA4B;AAElF,WAAKD,KAAiB,WAEd1F,EAAQ,OAAQ,KAAK,YAAY,KAAK,aAAa2F,EAAU,YAAYA,EAAU,UAAW,IAI9F,CAAExG,MAAe;AAEvB,UAAIyG,IAAMD,EAAU,WAAW,IAAI,KAAK,WAAW;AAC7C,aAAAxG,KAAAA,IAAI,KAAK,WAAW,MAAQwG,EAAU,WAAW,IAAI,KAAK,WAAW,IAEpE,KAAK,WAAW,IAAIxG,IAAIyG;AAAA,IAAA;AAAA,EAMlC;AAAA,EAEO,GAAID,GAA2B,GAAY;AASjD,YAPK,KAAK,aAAa,QAAQ,KAAK,UAAU,WAAW,KAAKA,EAAU,WAAW,KAAK,KAAK,UAAU,WAAW,KAAKA,EAAU,WAAW,OAE3I,KAAK,SAAS,KAAK,UAAW,KAAK,eAAeA,CAAU,GAC5D,KAAK,YAAYA,IAIb,KAAK,SAEF,KAAK,OAAQ,CAAE,IAIf;AAAA,EAIT;AAED;ACnBO,MAAME,UAAyB5B,EAAa;AAAA,EAmBlD,YAAa6B,GAAe;AAErB,aAfP,KAAO,YAAqB,IAI5B,KAAO,eAAuB,GAC9B,KAAO,aAAqB,GAC5B,KAAO,WAAmB,GAI1B,KAAO,UAA+B,IACtC,KAAO,UAA6B,IAM9BA,MAEJ,KAAK,MAAMA,GACN,KAAA,QAAS,KAAK,GAAI;AAAA,EAIzB;AAAA,EAEO,QAASA,GAAc;AAE7B,SAAK,MAAMA,GACX,KAAK,KAAK,IAAI,UAAW,KAAK,GAAI,GAClC,KAAK,GAAG,SAAS,KAAK,OAAO,KAAM,IAAK,GACxC,KAAK,GAAG,YAAY,KAAK,UAAU,KAAM,IAAK,GAC9C,KAAK,GAAG,UAAU,KAAK,QAAQ,KAAM,IAAK,GACrC,KAAA,GAAG,UAAU,CAAEvI,MAAO;AAE1B,cAAQ,MAAOA,CAAE;AAAA,IAAA;AAAA,EAInB;AAAA,EAEO,cAAewI,GAAmB;AAEpC,QAAAC,IAAM,IAAI;AAEd,IAAAA,EAAI,qBAAqB,MAAM;AAEzB,MAAAA,EAAI,cAAc,KAEjBA,EAAI,UAAU,OAElB,KAAK,YAAa,KAAK,MAAOA,EAAI,QAAS,CAAE;AAAA,IAI/C,GAIGA,EAAA,KAAM,OAAOD,CAAS,GAC1BC,EAAI,KAAM;AAAA,EAEX;AAAA,EAMQ,YAAaC,GAAoB;AAExC,SAAK,QAAQ,SAAS,GACtB,KAAK,QAAQ,SAAS,GAIjBA,EAAA,QAAQ,QAAS,CAAcC,MAAA;AAEnC,UAAIC,IAAS,IAAInC,EAAiBkC,EAAW,IAAK,GAE9CE,IAAmB,OAAO,KAAKF,EAAW,aAAa;AAE3D,eAAUxH,IAAI,GAAGA,IAAI0H,EAAiB,QAAQ1H,KAAM;AAEnD,YAAI2H,IAAkBD,EAAiB1H,IAEnCyF,IAAc,IAAIc,EAAaoB,CAAgB;AAExC,QAAAH,EAAA,cAAcG,GAAiB,QAAS,CAAcC,MAAA;AAE5D,cAAA/B,IAAQ,IAAIK;AAEhB,UAAAL,EAAM,IAAK+B,EAAW,UAAU,IAAK,CAAS3B,MAEtC,IAAIW,EAAgBX,EAAM,GAAGA,EAAM,KAAKA,EAAM,KAAKA,EAAM,CAAE,CAEjE,CAAE,GAEQR,EAAA,UAAWI,GAAO+B,EAAW,IAAK;AAAA,QAAA,CAE7C,GAEKH,EAAA,eAAgBhC,EAAY,MAAMA,CAAY;AAAA,MAEtD;AAEK,WAAA,QAAQ,KAAMgC,CAAO;AAAA,IAAA,CAEzB,GAIGF,EAAA,QAAQ,QAAS,CAAcM,MAAA;AAE9B,WAAA,QAAQ,KAAMA,CAAW;AAAA,IAAA,CAE7B,GAIF,KAAK,UAAU,gBAAgB,CAAC,IAAI,CAAC,GAEhC,KAAA,YAAY,KAAK,YAAY;AAAA,EAEnC;AAAA,EAEQ,eAAgBN,GAAuB;AAE9C,SAAK,YAAaA,EAAK,SAASA,EAAK,OAAOA,EAAK,GAAI;AAAA,EAEtD;AAAA,EAMQ,OAAQvJ,GAAe;AAE9B,SAAK,YAAY;AAAA,EAElB;AAAA,EAEQ,UAAW,GAAkB;AAEpC,QAAI8J,IAAM,KAAK,MAAO,EAAE,IAAK;AAExB,IAAAA,EAAI,QAAQ,eAEX,KAAA,YAAaA,EAAI,IAAK,IAEhBA,EAAI,QAAQ,mBAElB,KAAA,eAAgBA,EAAI,IAAK;AAAA,EAKhC;AAAA,EAEQ,QAAS,GAAe;AAE/B,SAAK,UAAU;AAAA,EAEhB;AAAA,EAMO,kBAAmBC,GAAqB;AAE9C,aAAU/H,IAAI,GAAGA,IAAI,KAAK,QAAQ,QAAQA;AAEzC,UAAK,KAAK,QAASA,GAAI,QAAQ+H;AAEvB,eAAA,KAAK,QAAS/H,GAAI;AAM3B,WAAO;EAER;AAAA,EAEO,UAAWgI,GAAqB;AAEtC,aAAUhI,IAAI,GAAGA,IAAI,KAAK,QAAQ,QAAQA;AAEzC,UAAK,KAAK,QAASA,GAAI,QAAQgI;AAE9B,eAAO,KAAK,QAAShI;AAMhB,WAAA;AAAA,EAER;AAAA,EAEO,cAAe+H,GAAqB;AAE1C,QAAIE,IAA6B,CAAA;AAGjC,WAFqB,KAAK,kBAAmBF,CAAW,EAEzC,QAAS,CAAcC,MAAA;AAEjC,UAAAP,IAAS,KAAK,UAAWO,CAAW;AAExC,MAAKP,KAEJQ,EAAQ,KAAMR,CAAO;AAAA,IAEtB,CAEC,GAEKQ;AAAA,EAER;AAAA,EAEO,0BAA2BC,GAAmB;AAE7C,WAAA,KAAK,QAAQ,KAAK,CAAUT,MAElB,OAAO,KAAMA,EAAO,MAAO,EAE1B,KAAK,CAAaU,MAAAA,KAAWD,CAAQ,CAEtD,KAAK;AAAA,EAEP;AAAA,EAEO,YAAaE,GAAiBC,GAAeC,GAAc;AAEjE,SAAK,eAAeF,GACf,KAAA,aAAaC,KAAS,KAAK,YAC3B,KAAA,WAAWC,KAAO,KAAK,UAEvB,KAAA,UAAW,mBAAmB,CAAE,KAAK,cAAc,KAAK,YAAY,KAAK,QAAS,CAAE;AAAA,EAE1F;AAAA,EAMO,UAAU;AAEhB,SAAK,UAAU;AAAA,EAEhB;AAAA,EAEO,YAAY;AAElB,IAAK,KAAK,OAET,KAAK,GAAG,SACR,KAAK,GAAG,YAAY,MACpB,KAAK,GAAG,UAAU,MAClB,KAAK,GAAG,SAAS,MAEjB,KAAK,YAAY;AAAA,EAInB;AAED;;;;ACtUiB,IAAAC;AAAA,CAAV,CAAUA,MAAV;AAEC,WAASC,KAAkB7D,GAAgD;AAEjF,UAAM8D,IAAM,CAAA;AAEZ,aAAUzI,IAAI,GAAGA,IAAI2E,EAAS,QAAQ3E;AAEhC,MAAA2E,EAAU3E,MAAO,QAEd,OAAA,OAAQyI,GAAK9D,EAAU3E,EAAI;AAM7B,WAAAyI;AAAA,EAER;AAhBOF,EAAAA,EAAS,gBAAAC;AAAA,GAFAD,MAAAA,IAAA,CAAA,EAAA;ACWV,MAAMG,EAAyB;AAAA,EAuBrC,YAAaC,GAA+BC,GAA0B;AARtE,SAAQ,gBAA2C,IAU/C,KAAK,WAAWD,GACX,KAAA,WAAWC,EAAS,SAEzB,KAAK,WAAW;AAAA,MACf,UAAU;AAAA,QACT,OAAO,KAAK;AAAA,MACb;AAAA,IAAA,GAGI,KAAA,iBAAiB,KAAK,WAAY;AAAA,MACtC,WAAW7L,EAAM;AAAA,MACjB,WAAWA,EAAM;AAAA,IAAA,CAChB,GAEG,KAAA,eAAe,KAAK,WAAY;AAAA,MACpC,WAAWA,EAAM;AAAA,MACjB,WAAWA,EAAM;AAAA,IAAA,CAChB,GAEG,KAAA,QAAQ,IAAIA,EAAM,MAAM,GACxB,KAAA,SAAS,IAAIA,EAAM,OAAO,GAE/B,KAAK,YAAY,IACZ,KAAA,OAAO,IAAIA,EAAM,KAAM,IAAIA,EAAM,oBAAqB,GAAG,CAAE,CAAE,GAC7D,KAAA,MAAM,IAAK,KAAK,IAAK;AAAA,EAE9B;AAAA,EAlCA,IAAW,cAAwB;AAE/B,WAAO,KAAK,SAAS,WAAW,IAAK,mBAAoB;AAAA,EAE7D;AAAA,EAgCO,0BAA0B;AAE7B,QAAI8L,IAAI,IAAI,aAAc,KAAK,SAAS,SAAS,MAAM,IAAI,KAAK,SAAS,SAAS,MAAM,IAAI,CAAE,GAC1FC,IAAU,IAAI/L,EAAM,YAAa8L,GAAG,KAAK,SAAS,SAAS,MAAM,GAAG,KAAK,SAAS,SAAS,MAAM,GAAG9L,EAAM,YAAYA,EAAM,SAAU;AAC1I,WAAA+L,EAAQ,cAAc,IAEfA;AAAA,EAEX;AAAA,EAUO,WAAYC,GAAwBC,GAAqE;AAE5G,QAAI7K,IAAY,UAAU,WACtB8K,IAAQ9K,EAAU,QAAS,QAAS,KAAK,KAAKA,EAAU,QAAS,MAAO,KAAK,KAAK,UAAU,YAAY,UAAY,UAAU,YAAY,cAAc,UAAU,UAAU,QAAS,QAAS,KAAK,MAAO,UAAU,UAAU,QAAS,QAAS,KAAK,MAAS,UAAmB,eAAe,QAEhSnB,IAAwC;AAAA,MAC3C,OAAOD,EAAM;AAAA,MACb,OAAOA,EAAM;AAAA,MACb,WAAWA,EAAM;AAAA,MACjB,WAAWA,EAAM;AAAA,MACjB,QAAQA,EAAM;AAAA,MACd,MAAMkM,IAAQlM,EAAM,gBAAgBA,EAAM;AAAA,MAC1C,eAAe;AAAA,MACf,aAAa;AAAA,IAAA,GAEVmM,IAAoC,MACpCC,IAAqD;AAEzD,IAAKJ,MAECA,EAAiB,iBAEXG,IAAAH,GAELC,MAEUG,IAAAH,MAMDG,IAAAJ,IAMXI,MAEEnM,EAAA,QAAQmM,EAAY,SAASnM,EAAM,OACnCA,EAAA,QAAQmM,EAAY,SAASnM,EAAM,OACnCA,EAAA,YAAYmM,EAAY,aAAanM,EAAM,WAC3CA,EAAA,YAAYmM,EAAY,aAAanM,EAAM,WAC3CA,EAAA,SAASmM,EAAY,UAAUnM,EAAM,QACrCA,EAAA,OAAOmM,EAAY,QAAQnM,EAAM,MACjCA,EAAA,gBAAgBmM,EAAY,iBAAiBnM,EAAM,eACnDA,EAAA,cAAcmM,EAAY,eAAenM,EAAM;AAItD,QAAIoM,IAAM,IAAIrM,EAAM,kBAAmB,KAAK,SAAS,SAAS,MAAM,GAAG,KAAK,SAAS,SAAS,MAAM,GAAGC,CAAM,GAE5GuK,IAAO,EAAE,QAAQ6B;AAIlB,QAFE,KAAA,cAAc,KAAMA,CAAI,GAErBF,GAAU;AAEV,UAAAG,IAAa,KAAK,aAAc;AAAA,QACtC,gBAAgBC;AAAA,QAChB,UAAU;AAAA,UACT,KAAK;AAAA,YACJ,OAAOJ;AAAA,UACR;AAAA,QACD;AAAA,MAAA,CACC;AAEM,WAAA,QAASG,GAAY9B,CAAK;AAAA,IAEhC;AAEO,WAAAA;AAAA,EAEX;AAAA,EAEO,aAAcvK,GAA8D;AAE/E,QAAIgJ,IAAgBuC,EAAY,cAAevL,EAAM,UAAU,KAAK,QAAS;AAEhF,IAAAA,EAAM,WAAWgJ,GACXhJ,EAAA,eAAeA,EAAM,gBAAgBuM;AAExC,QAAIlM,IAAM,IAAIN,EAAM,eAAgBC,CAAM;AAErC,gBAAA,UAAU,KAAMK,CAAI,GAEU;AAAA,MAClC,UAAUA;AAAA,MACV,UAAUL,EAAM;AAAA,IAAA;AAAA,EAKrB;AAAA,EAEO,QAASwM,GAA8BjC,GAA0BkC,GAAwB;AAExF,QAAAC;AAEJ,IAAKnC,EAAK,OAAO,QAAQ,aAAaxK,EAAM,eAE3C2M,IAAO,KAAK,iBAIZA,IAAO,KAAK,cAIR,KAAA,KAAK,WAAWF,EAAO;AAExB,QAAAG,IAAsB,KAAK,SAAS,gBAAgB;AAEnD,SAAA,SAAS,gBAAiBD,EAAK,MAAO,GAE3C,KAAK,SAAS,OAAQ,KAAK,OAAOD,KAAU,KAAK,MAAO,GAEnD,KAAA,YAAalC,GAAMmC,CAAK,GAExB,KAAA,SAAS,gBAAiBC,CAAoB;AAAA,EAEvD;AAAA,EAEU,YAAaC,GAAwBC,GAAyB;AAEpE,QAAIC,IAAMF,EAAG;AACb,IAAAA,EAAG,SAASC,EAAG,QACfA,EAAG,SAASC;AAAA,EAEhB;AAAA,EAEO,UAAU;AAGb,IADU,KAAK,KAAK,SAChB,QAAQ;AAEZ,aAAU9J,IAAI,GAAGA,IAAI,KAAK,UAAU,QAAQA;AAEtC,WAAA,UAAWA,GAAI,QAAQ;AAIxB,SAAA,MAAM,OAAQ,KAAK,IAAK,GAExB,KAAA,eAAe,OAAO,WACtB,KAAA,aAAa,OAAO;EAE7B;AAAA,EAEO,WAAY4I,GAA0B;AAEvC,SAAA,SAAS,KAAMA,CAAS;AAE7B,aAAU5I,IAAI,GAAGA,IAAI,KAAK,cAAc,QAAQA;AAI/C,MAFa,KAAK,cAAeA,GAE1B,QAAS4I,EAAS,GAAGA,EAAS,CAAE;AAAA,EAIzC;AAED;;;AChPO,MAAMmB,EAAe;AAAA,EAW3B,YAAapB,GAA+BqB,GAAkBC,GAAwC;AAErG,SAAK,WAAWtB,GACX,KAAA,QAAQ,IAAI5L,EAAM,MAAM,GAC7B,KAAK,SAAS,IAAIA,EAAM,mBAAoB,IAAO,GAAK,GAAK,EAAM,GAE9D,KAAA,SAAS,IAAIA,EAAM,KAAMkN,KAAkB,IAAIlN,EAAM,oBAAqB,GAAG,CAAE,CAAE,GACjF,KAAA,MAAM,IAAK,KAAK,MAAO,GAEpBiN,EAAA,eAAeA,EAAQ,gBAAgBE,GACvCF,EAAA,WAAWA,EAAQ,YAAY,CAAA,GACvCA,EAAQ,SAAS,aAAa;AAAA,MAC7B,OAAO,IAAIjN,EAAM,QAAQ;AAAA,IAAA,GAG1B,KAAK,SAAS;AAAA,MACb,UAAU,IAAIA,EAAM,eAAgBiN,CAAQ;AAAA,IAAA;AAAA,EAG9C;AAAA,EAEO,OAAQG,GAA8CC,IAA+C,MAAO;AAE9G,QAAAC,IAAkB,KAAK,SAAS,gBAAgB,GAEhDC,IAAS,KAAK,QACdC,IAAWD,EAAO,UAClB3F,IAAW4F,EAAS;AAExB,QAAKJ,GAAqB;AAErB,UAAAvF,IAAO,OAAO,KAAMuF,CAAmB;AAE3C,eAAUK,IAAI,GAAGA,IAAI5F,EAAK,QAAQ4F;AAE5B,QAAA7F,EAAUC,EAAM4F,MAEpB7F,EAAUC,EAAM4F,IAAM,QAAQL,EAAoBvF,EAAM4F,OAIxD7F,EAAUC,EAAM4F,MAAQ,EAAE,OAAOL,EAAoBvF,EAAM4F,OAE3DF,EAAO,SAAS,cAAc,IAE9BA,EAAO,SAAS,WAAW3F;AAAA,IAM9B;AAEA,IAAKyF,IAEJzF,EAAS,WAAW,MAAM,IAAKyF,EAAa,OAAOA,EAAa,MAAO,IAIvE,KAAK,SAAS,QAASzF,EAAS,WAAW,KAAM,GAIlD,KAAK,OAAO,WAAW4F,GAElB,KAAA,SAAS,gBAAiBH,CAAa,GAE5C,KAAK,SAAS,OAAQ,KAAK,OAAO,KAAK,MAAO,GAEzC,KAAA,SAAS,gBAAiBC,CAAgB;AAAA,EAEhD;AAED;AChFO,MAAMI,EAAiB;AAAA,EAM7B,YAAavN,GAAwBwN,GAAsBC,GAA+B;AAEzF,SAAK,MAAMzN,GAEX,KAAK,gBAAgB;AAAA,MACpB,UAAU,KAAK,IAAI,SAAS,MAAM;AAAA,MAClC,UAAU,KAAK,IAAI,WAAW,MAAM;AAAA,MACpC,OAAO,KAAK,IAAI,MAAM,MAAM;AAAA,IAAA,GAG7B,KAAK,YAAYwN,GAEVC,MAED,KAAA,UAAU,YAAY,KAAK,UAAU,SAAS,IAAK,KAAK,IAAI,QAAS,GACrE,KAAA,UAAU,YAAY,KAAK,UAAU,SAAS,SAAU,KAAK,IAAI,UAAW;AAAA,EAInF;AAAA,EAEO,gBAAiBnJ,GAAiB;AAEnC,IAAA,KAAK,UAAU,YAEnB,KAAK,IAAI,SAAS,KAAM,KAAK,cAAc,SAAS,MAAM,EAAE,KAAM,KAAK,UAAU,UAAUA,CAAO,CAAE,GAIhG,KAAK,UAAU,YAEnB,KAAK,IAAI,WAAW,KAAM,KAAK,cAAc,SAAS,MAAM,EAAE,MAAO,KAAK,UAAU,UAAUA,CAAO,CAAE,GAInG,KAAK,UAAU,SAEnB,KAAK,IAAI,MAAM,KAAM,KAAK,cAAc,MAAM,MAAA,EAAQ,eAAgB,KAAK,UAAU,QAAUA,IAAW,IAAMA,CAAO,CAAE;AAAA,EAI3H;AAED;AC7Da,MAAAoJ,UAAgB7N,EAAM,gBAAgB;AAAA,EAElD,cAAc;AAEP;EAEP;AAAA,EAEO,SAAS;AAEf,SAAK,cAAe,EAAE,MAAM,SAAW,CAAA;AAAA,EAExC;AAAA,EAEO,KAAMgI,GAAe;AAE3B,WAAO,IAAI,QAAe,CAAEN,GAASoG,MAAY;AAEhD,YAAMC,IAAW,MAAM;AAEf,QAAAD,KAEF,KAAA,oBAAqB,UAAUC,CAAS;AAAA,MAAA;AAIzC,WAAA,iBAAkB,UAAUA,CAAS,GAE1C,WAAY,MAAM;AAEZ,aAAA,oBAAqB,UAAUA,CAAS,GAErCrG;MAAA,GAENM,IAAO,GAAO;AAAA,IAAA,CAEhB;AAAA,EAEH;AAED;"}